{"version":3,"file":"CZoAnUBr.js","sources":["../../../resources/js/Pages/Tesla/AdminPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Navbar from \"@/Components/Navbar\";\nimport { Card } from \"@/Components/ui/card\";\nimport MaxWidthWrapper from \"@/Components/MaxWidthWrapper\";\n\ntype Soal = {\n    id: number;\n    nomor: number;\n    tipe: string;\n    pertanyaan: string;\n    jawaban: string;\n};\n\nconst emptySoal = { id: 0, nomor: 0, tipe: \"mendatar\", pertanyaan: \"\", jawaban: \"\" };\n\nconst AdminPage: React.FC = () => {\n    const [soals, setSoals] = useState<Soal[]>([]);\n    const [form, setForm] = useState<Soal>(emptySoal);\n    const [editing, setEditing] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const fetchSoals = async () => {\n        const res = await fetch(\"/api/tesla/\");\n        const result = await res.json();\n        setSoals(result.data || []);\n    };\n\n    useEffect(() => {\n        fetchSoals();\n    }, []);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setMessage(\"\");\n        const method = editing ? \"PUT\" : \"POST\";\n        const url = editing ? `/api/tesla/${form.id}` : \"/api/tesla/\";\n        const payload = { ...form, nomor: Number(form.nomor) };\n        const res = await fetch(url, {\n            method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-Requested-With\": \"XMLHttpRequest\",\n                \"X-CSRF-TOKEN\": (document.querySelector('meta[name=\"csrf-token\"]') as HTMLMetaElement)?.content || \"\",\n            },\n            body: JSON.stringify(payload),\n        });\n        const data = await res.json();\n        if (!res.ok) {\n            setMessage(data.message || \"Gagal menyimpan data\");\n            return;\n        }\n        setMessage(data.message);\n        setForm(emptySoal);\n        setEditing(false);\n        fetchSoals();\n    };\n\n    const handleEdit = (soal: Soal) => {\n        setForm(soal);\n        setEditing(true);\n    };\n\n    const handleDelete = async (id: number) => {\n        if (!confirm(\"Yakin hapus soal ini?\")) return;\n        await fetch(`/api/tesla/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"X-Requested-With\": \"XMLHttpRequest\",\n                \"X-CSRF-TOKEN\": (document.querySelector('meta[name=\"csrf-token\"]') as HTMLMetaElement)?.content || \"\",\n            },\n        });\n        fetchSoals();\n    };\n\n    return (\n        <>\n            <Navbar isFixed={true} />\n            <MaxWidthWrapper className=\"py-8 mt-20\">\n                <h2 className=\"text-3xl font-bold mb-6 text-center text-jaffa-700\">Admin TTS Tesla</h2>\n                <Card className=\"p-6 mb-8\">\n                    <h3 className=\"text-xl font-semibold mb-4\">{editing ? \"Edit Soal\" : \"Tambah Soal\"}</h3>\n                    <form onSubmit={handleSubmit} className=\"flex flex-col gap-3\">\n                        <div>\n                            <label className=\"mr-2\">Tipe:</label>\n                            <select name=\"tipe\" value={form.tipe} onChange={handleChange} className=\"border rounded px-2 py-1\">\n                                <option value=\"mendatar\">Mendatar</option>\n                                <option value=\"menurun\">Menurun</option>\n                            </select>\n                        </div>\n                        <div>\n                            <label className=\"mr-2\">Nomor:</label>\n                            <input name=\"nomor\" type=\"number\" value={form.nomor} onChange={handleChange} className=\"border rounded px-2 py-1\" required />\n                        </div>\n                        <div>\n                            <label className=\"mr-2\">Pertanyaan:</label>\n                            <input name=\"pertanyaan\" type=\"text\" value={form.pertanyaan} onChange={handleChange} className=\"border rounded px-2 py-1 w-full\" required />\n                        </div>\n                        <div>\n                            <label className=\"mr-2\">Jawaban:</label>\n                            <input name=\"jawaban\" type=\"text\" value={form.jawaban} onChange={handleChange} className=\"border rounded px-2 py-1 w-full\" required />\n                        </div>\n                        <div>\n                            <button type=\"submit\" className=\"bg-jaffa-500 hover:bg-jaffa-600 text-white px-4 py-2 rounded\">\n                                {editing ? \"Update\" : \"Tambah\"}\n                            </button>\n                            {editing && (\n                                <button type=\"button\" className=\"ml-2 px-4 py-2 rounded border\" onClick={() => { setForm(emptySoal); setEditing(false); }}>\n                                    Batal\n                                </button>\n                            )}\n                        </div>\n                        {message && <div className=\"text-green-600\">{message}</div>}\n                    </form>\n                </Card>\n                <Card className=\"p-6\">\n                    <h3 className=\"text-xl font-semibold mb-4\">Daftar Soal</h3>\n                    <table className=\"w-full border\">\n                        <thead>\n                            <tr>\n                                <th className=\"border px-2 py-1\">ID</th>\n                                <th className=\"border px-2 py-1\">Nomor</th>\n                                <th className=\"border px-2 py-1\">Tipe</th>\n                                <th className=\"border px-2 py-1\">Pertanyaan</th>\n                                <th className=\"border px-2 py-1\">Jawaban</th>\n                                <th className=\"border px-2 py-1\">Aksi</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {soals.map(soal => (\n                                <tr key={soal.id}>\n                                    <td className=\"border px-2 py-1\">{soal.id}</td>\n                                    <td className=\"border px-2 py-1\">{soal.nomor}</td>\n                                    <td className=\"border px-2 py-1\">{soal.tipe}</td>\n                                    <td className=\"border px-2 py-1\">{soal.pertanyaan}</td>\n                                    <td className=\"border px-2 py-1\">{soal.jawaban}</td>\n                                    <td className=\"border px-2 py-1\">\n                                        <button className=\"text-blue-600 mr-2\" onClick={() => handleEdit(soal)}>Edit</button>\n                                        <button className=\"text-red-600\" onClick={() => handleDelete(soal.id)}>Hapus</button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </Card>\n            </MaxWidthWrapper>\n        </>\n    );\n};\n\nexport default AdminPage;\n"],"names":["emptySoal","id","nomor","tipe","pertanyaan","jawaban","AdminPage","soals","setSoals","useState","form","setForm","editing","setEditing","message","setMessage","fetchSoals","async","res","fetch","result","json","data","useEffect","handleChange","e","target","name","value","jsxs","Fragment","children","jsx","Navbar","isFixed","MaxWidthWrapper","className","Card","onSubmit","preventDefault","method","url","payload","Number","headers","_a","document","querySelector","content","body","JSON","stringify","ok","onChange","type","required","onClick","map","soal","handleEdit","confirm","handleDelete"],"mappings":"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"}