{"version":3,"file":"lhEf2hqi.js","sources":["../../../node_modules/@radix-ui/react-progress/dist/index.mjs","../../../resources/js/Components/ui/progress.tsx"],"sourcesContent":["\"use client\";\n\n// packages/react/progress/src/Progress.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, \"Progress\"));\n    }\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, \"Progress\"));\n    }\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n    return /* @__PURE__ */ jsx(ProgressProvider, { scope: __scopeProgress, value, max, children: /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": 0,\n        \"aria-valuenow\": isNumber(value) ? value : void 0,\n        \"aria-valuetext\": valueLabel,\n        role: \"progressbar\",\n        \"data-state\": getProgressState(value, max),\n        \"data-value\": value ?? void 0,\n        \"data-max\": max,\n        ...progressProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": getProgressState(context.value, context.max),\n        \"data-value\": context.value ?? void 0,\n        \"data-max\": context.max,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return `${Math.round(value / max * 100)}%`;\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;\nexport {\n  Indicator,\n  Progress,\n  ProgressIndicator,\n  Root,\n  createProgressScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n    React.ElementRef<typeof ProgressPrimitive.Root>,\n    React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n    <ProgressPrimitive.Root\n        ref={ref}\n        className=\"relative h-4 w-full overflow-hidden rounded-full bg-[#FEF3F2] outline outline-1 outline-[#1F1D1D]/30 -outline-offset-1\"\n        {...props}\n    >\n        <ProgressPrimitive.Indicator\n            className={cn(\n                \"h-full w-full flex-1 rounded-full bg-gradient-to-r from-candlelight-800 to-candlelight-950 transition-all\",\n                className,\n            )}\n            style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n        />\n    </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n"],"names":["PROGRESS_NAME","DEFAULT_MAX","createProgressContext","createProgressScope","createContextScope","ProgressProvider","useProgressContext","Progress","React.forwardRef","forwardRef","props","forwardedRef","__scopeProgress","value","valueProp","max","maxProp","getValueLabel","defaultGetValueLabel","progressProps","isValidMaxNumber","console","error","isValidValueNumber","propValue","componentName","getInvalidValueError","valueLabel","isNumber","jsx","scope","children","jsxRuntimeExports","Primitive","div","role","getProgressState","ref","displayName","INDICATOR_NAME","ProgressIndicator","indicatorProps","context","Math","round","maxValue","isNaN","Root","Indicator","React","className","ProgressPrimitive.Root","ProgressPrimitive.Indicator","cn","style","transform"],"mappings":"2HAOA,IAAIA,EAAgB,WAChBC,EAAc,KACbC,EAAuBC,GAAuBC,EAAmBJ,IACjEK,EAAkBC,GAAsBJ,EAAsBF,GAC/DO,EAAWC,EAAgBC,YAC7B,CAACC,EAAOC,KACA,MAAAC,gBACJA,EACAC,MAAOC,EAAY,KACnBC,IAAKC,EAAAC,cACLA,EAAgBC,KACbC,GACDT,GACCM,GAAuB,IAAZA,GAAmBI,EAAiBJ,IAClDK,QAAQC,MA4DL,mCA5D8B,GAAGN,uBAAW,0FAEjD,MAAMD,EAAMK,EAAiBJ,GAAWA,EAAUf,EAChC,OAAda,GAAuBS,EAAmBT,EAAWC,IACvDM,QAAQC,MA0Dd,SAA8BE,EAAWC,GAChC,MAAA,qCAAqCD,qBAA6BC,mOAM3E,CAjEoBC,CAAqB,GAAGZ,IAAa,aAErD,MAAMD,EAAQU,EAAmBT,EAAWC,GAAOD,EAAY,KACzDa,EAAaC,EAASf,GAASI,EAAcJ,EAAOE,QAAO,EAC1Cc,OAAAA,EAAGA,IAACxB,EAAkB,CAAEyB,MAAOlB,EAAiBC,QAAOE,MAAKgB,SAA6BC,EAAAH,IAC9GI,EAAUC,IACV,CACE,gBAAiBnB,EACjB,gBAAiB,EACjB,gBAAiBa,EAASf,GAASA,OAAQ,EAC3C,iBAAkBc,EAClBQ,KAAM,cACN,aAAcC,EAAiBvB,EAAOE,GACtC,aAAcF,QAAS,EACvB,WAAYE,KACTI,EACHkB,IAAK1B,KAEN,IAGPJ,EAAS+B,YAActC,EACvB,IAAIuC,EAAiB,oBACjBC,EAAoBhC,EAAgBC,YACtC,CAACC,EAAOC,KACN,MAAMC,gBAAEA,KAAoB6B,GAAmB/B,EACzCgC,EAAUpC,EAAmBiC,EAAgB3B,GACnD,OAA0BoB,EAAAH,IACxBI,EAAUC,IACV,CACE,aAAcE,EAAiBM,EAAQ7B,MAAO6B,EAAQ3B,KACtD,aAAc2B,EAAQ7B,YAAS,EAC/B,WAAY6B,EAAQ3B,OACjB0B,EACHJ,IAAK1B,GAEb,IAIA,SAASO,EAAqBL,EAAOE,GACnC,MAAO,GAAG4B,KAAKC,MAAM/B,EAAQE,EAAM,OACrC,CACA,SAASqB,EAAiBvB,EAAOgC,GAC/B,OAAgB,MAAThC,EAAgB,gBAAkBA,IAAUgC,EAAW,WAAa,SAC7E,CACA,SAASjB,EAASf,GAChB,MAAwB,iBAAVA,CAChB,CACA,SAASO,EAAiBL,GACxB,OAAOa,EAASb,KAAS+B,MAAM/B,IAAQA,EAAM,CAC/C,CACA,SAASQ,EAAmBV,EAAOE,GAC1B,OAAAa,EAASf,KAAWiC,MAAMjC,IAAUA,GAASE,GAAOF,GAAS,CACtE,CAfA2B,EAAkBF,YAAcC,EA2BhC,IAAIQ,EAAOxC,EACPyC,EAAYR,ECpFV,MAAAjC,EAAW0C,EAAMxC,YAGrB,EAAGyC,YAAWrC,WAAUH,GAAS2B,IAC/BL,EAAAH,IAACsB,EAAA,CACGd,MACAa,UAAU,4HACNxC,EAEJqB,SAAAC,EAAAH,IAACuB,EAAA,CACGF,UAAWG,EACP,4GACAH,GAEJI,MAAO,CAAEC,UAAW,eAAe,KAAO1C,GAAS,cAI/DN,EAAS+B,YAAca,EAAuBb","x_google_ignoreList":[0]}