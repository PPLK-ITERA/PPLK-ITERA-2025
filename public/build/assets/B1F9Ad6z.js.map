{"version":3,"file":"B1F9Ad6z.js","sources":["../../../resources/js/Components/ui/carousel.tsx"],"sourcesContent":["\"use client\";\n\nimport useEmblaCarousel, {\n    type UseEmblaCarouselType,\n} from \"embla-carousel-react\";\n\nimport * as React from \"react\";\n\nimport { ArrowLeft, ArrowRight } from \"lucide-react\";\n\nimport { Button } from \"@/Components/ui/button\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype CarouselApi = UseEmblaCarouselType[1];\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>;\ntype CarouselOptions = UseCarouselParameters[0];\ntype CarouselPlugin = UseCarouselParameters[1];\n\ntype CarouselProps = {\n    opts?: CarouselOptions;\n    plugins?: CarouselPlugin;\n    orientation?: \"horizontal\" | \"vertical\";\n    setApi?: (api: CarouselApi) => void;\n};\n\ntype CarouselContextProps = {\n    carouselRef: ReturnType<typeof useEmblaCarousel>[0];\n    api: ReturnType<typeof useEmblaCarousel>[1];\n    scrollPrev: () => void;\n    scrollNext: () => void;\n    canScrollPrev: boolean;\n    canScrollNext: boolean;\n} & CarouselProps;\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null);\n\nfunction useCarousel() {\n    const context = React.useContext(CarouselContext);\n\n    if (!context) {\n        throw new Error(\"useCarousel must be used within a <Carousel />\");\n    }\n\n    return context;\n}\n\nconst Carousel = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n    (\n        {\n            orientation = \"horizontal\",\n            opts,\n            setApi,\n            plugins,\n            className,\n            children,\n            ...props\n        },\n        ref,\n    ) => {\n        const [carouselRef, api] = useEmblaCarousel(\n            {\n                ...opts,\n                axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n            },\n            plugins,\n        );\n        const [canScrollPrev, setCanScrollPrev] = React.useState(false);\n        const [canScrollNext, setCanScrollNext] = React.useState(false);\n\n        const onSelect = React.useCallback((api: CarouselApi) => {\n            if (!api) {\n                return;\n            }\n\n            setCanScrollPrev(api.canScrollPrev());\n            setCanScrollNext(api.canScrollNext());\n        }, []);\n\n        const scrollPrev = React.useCallback(() => {\n            api?.scrollPrev();\n        }, [api]);\n\n        const scrollNext = React.useCallback(() => {\n            api?.scrollNext();\n        }, [api]);\n\n        const handleKeyDown = React.useCallback(\n            (event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (event.key === \"ArrowLeft\") {\n                    event.preventDefault();\n                    scrollPrev();\n                } else if (event.key === \"ArrowRight\") {\n                    event.preventDefault();\n                    scrollNext();\n                }\n            },\n            [scrollPrev, scrollNext],\n        );\n\n        React.useEffect(() => {\n            if (!api || !setApi) {\n                return;\n            }\n\n            setApi(api);\n        }, [api, setApi]);\n\n        React.useEffect(() => {\n            if (!api) {\n                return;\n            }\n\n            onSelect(api);\n            api.on(\"reInit\", onSelect);\n            api.on(\"select\", onSelect);\n\n            return () => {\n                api?.off(\"select\", onSelect);\n            };\n        }, [api, onSelect]);\n\n        return (\n            <CarouselContext.Provider\n                value={{\n                    carouselRef,\n                    api: api,\n                    opts,\n                    orientation:\n                        orientation ||\n                        (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n                    scrollPrev,\n                    scrollNext,\n                    canScrollPrev,\n                    canScrollNext,\n                }}\n            >\n                <div\n                    ref={ref}\n                    onKeyDownCapture={handleKeyDown}\n                    className={cn(\"relative\", className)}\n                    role=\"region\"\n                    aria-roledescription=\"carousel\"\n                    {...props}\n                >\n                    {children}\n                </div>\n            </CarouselContext.Provider>\n        );\n    },\n);\nCarousel.displayName = \"Carousel\";\n\nconst CarouselContent = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n    const { carouselRef, orientation } = useCarousel();\n\n    return (\n        <div ref={carouselRef} className=\"overflow-hidden\">\n            <div\n                ref={ref}\n                className={cn(\n                    \"flex\",\n                    orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n                    className,\n                )}\n                {...props}\n            />\n        </div>\n    );\n});\nCarouselContent.displayName = \"CarouselContent\";\n\nconst CarouselItem = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n    const { orientation } = useCarousel();\n\n    return (\n        <div\n            ref={ref}\n            role=\"group\"\n            aria-roledescription=\"slide\"\n            className={cn(\n                \"min-w-0 shrink-0 grow-0 basis-full\",\n                orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n                className,\n            )}\n            {...props}\n        />\n    );\n});\nCarouselItem.displayName = \"CarouselItem\";\n\nconst CarouselPrevious = React.forwardRef<\n    HTMLButtonElement,\n    React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n    const { orientation, scrollPrev, canScrollPrev } = useCarousel();\n\n    return (\n        <Button\n            ref={ref}\n            variant={variant}\n            size={size}\n            className={cn(\n                \"absolute h-8 w-8 rounded-full\",\n                orientation === \"horizontal\"\n                    ? \"-left-12 top-1/2 -translate-y-1/2\"\n                    : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n                className,\n            )}\n            disabled={!canScrollPrev}\n            onClick={scrollPrev}\n            {...props}\n        >\n            <ArrowLeft className=\"w-4 h-4\" />\n            <span className=\"sr-only\">Previous slide</span>\n        </Button>\n    );\n});\nCarouselPrevious.displayName = \"CarouselPrevious\";\n\nconst CarouselNext = React.forwardRef<\n    HTMLButtonElement,\n    React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n    const { orientation, scrollNext, canScrollNext } = useCarousel();\n\n    return (\n        <Button\n            ref={ref}\n            variant={variant}\n            size={size}\n            className={cn(\n                \"absolute h-8 w-8 rounded-full\",\n                orientation === \"horizontal\"\n                    ? \"-right-12 top-1/2 -translate-y-1/2\"\n                    : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n                className,\n            )}\n            disabled={!canScrollNext}\n            onClick={scrollNext}\n            {...props}\n        >\n            <ArrowRight className=\"w-4 h-4\" />\n            <span className=\"sr-only\">Next slide</span>\n        </Button>\n    );\n});\nCarouselNext.displayName = \"CarouselNext\";\n\nexport {\n    type CarouselApi,\n    Carousel,\n    CarouselContent,\n    CarouselItem,\n    CarouselPrevious,\n    CarouselNext,\n};\n"],"names":["CarouselContext","React.createContext","useCarousel","context","React.useContext","Error","Carousel","React.forwardRef","forwardRef","orientation","opts","setApi","plugins","className","children","props","ref","carouselRef","api","useEmblaCarousel","axis","canScrollPrev","setCanScrollPrev","React.useState","canScrollNext","setCanScrollNext","onSelect","React.useCallback","scrollPrev","scrollNext","handleKeyDown","useCallback","event","key","preventDefault","React.useEffect","on","off","jsxRuntimeExports","jsx","Provider","value","onKeyDownCapture","cn","role","displayName","CarouselContent","CarouselItem","CarouselPrevious","variant","size","jsxs","Button","disabled","onClick","ArrowLeft","CarouselNext","ArrowRight"],"mappings":"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"}