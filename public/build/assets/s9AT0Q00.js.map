{"version":3,"file":"s9AT0Q00.js","sources":["../../../node_modules/date-fns/locale/id/_lib/formatDistance.mjs","../../../node_modules/date-fns/locale/id/_lib/formatLong.mjs","../../../node_modules/date-fns/locale/id/_lib/formatRelative.mjs","../../../node_modules/date-fns/locale/id.mjs","../../../node_modules/date-fns/locale/id/_lib/localize.mjs","../../../node_modules/date-fns/locale/id/_lib/match.mjs","../../../resources/js/Pages/Mading/Pengumpulan/Page.tsx"],"sourcesContent":["const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"kurang dari 1 detik\",\n    other: \"kurang dari {{count}} detik\",\n  },\n\n  xSeconds: {\n    one: \"1 detik\",\n    other: \"{{count}} detik\",\n  },\n\n  halfAMinute: \"setengah menit\",\n\n  lessThanXMinutes: {\n    one: \"kurang dari 1 menit\",\n    other: \"kurang dari {{count}} menit\",\n  },\n\n  xMinutes: {\n    one: \"1 menit\",\n    other: \"{{count}} menit\",\n  },\n\n  aboutXHours: {\n    one: \"sekitar 1 jam\",\n    other: \"sekitar {{count}} jam\",\n  },\n\n  xHours: {\n    one: \"1 jam\",\n    other: \"{{count}} jam\",\n  },\n\n  xDays: {\n    one: \"1 hari\",\n    other: \"{{count}} hari\",\n  },\n\n  aboutXWeeks: {\n    one: \"sekitar 1 minggu\",\n    other: \"sekitar {{count}} minggu\",\n  },\n\n  xWeeks: {\n    one: \"1 minggu\",\n    other: \"{{count}} minggu\",\n  },\n\n  aboutXMonths: {\n    one: \"sekitar 1 bulan\",\n    other: \"sekitar {{count}} bulan\",\n  },\n\n  xMonths: {\n    one: \"1 bulan\",\n    other: \"{{count}} bulan\",\n  },\n\n  aboutXYears: {\n    one: \"sekitar 1 tahun\",\n    other: \"sekitar {{count}} tahun\",\n  },\n\n  xYears: {\n    one: \"1 tahun\",\n    other: \"{{count}} tahun\",\n  },\n\n  overXYears: {\n    one: \"lebih dari 1 tahun\",\n    other: \"lebih dari {{count}} tahun\",\n  },\n\n  almostXYears: {\n    one: \"hampir 1 tahun\",\n    other: \"hampir {{count}} tahun\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"dalam waktu \" + result;\n    } else {\n      return result + \" yang lalu\";\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, d MMMM yyyy\",\n  long: \"d MMMM yyyy\",\n  medium: \"d MMM yyyy\",\n  short: \"d/M/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH.mm.ss\",\n  long: \"HH.mm.ss\",\n  medium: \"HH.mm\",\n  short: \"HH.mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'pukul' {{time}}\",\n  long: \"{{date}} 'pukul' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"eeee 'lalu pukul' p\",\n  yesterday: \"'Kemarin pukul' p\",\n  today: \"'Hari ini pukul' p\",\n  tomorrow: \"'Besok pukul' p\",\n  nextWeek: \"eeee 'pukul' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { formatDistance } from \"./id/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./id/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./id/_lib/formatRelative.mjs\";\nimport { localize } from \"./id/_lib/localize.mjs\";\nimport { match } from \"./id/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary Indonesian locale.\n * @language Indonesian\n * @iso-639-2 ind\n * @author Rahmat Budiharso [@rbudiharso](https://github.com/rbudiharso)\n * @author Benget Nata [@bentinata](https://github.com/bentinata)\n * @author Budi Irawan [@deerawan](https://github.com/deerawan)\n * @author Try Ajitiono [@imballinst](https://github.com/imballinst)\n */\nexport const id = {\n  code: \"id\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default id;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\n// All data for localization are taken from this page\n// https://www.unicode.org/cldr/charts/32/summary/id.html\nconst eraValues = {\n  narrow: [\"SM\", \"M\"],\n  abbreviated: [\"SM\", \"M\"],\n  wide: [\"Sebelum Masehi\", \"Masehi\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\n  wide: [\"Kuartal ke-1\", \"Kuartal ke-2\", \"Kuartal ke-3\", \"Kuartal ke-4\"],\n};\n\n// Note: in Indonesian, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"Mei\",\n    \"Jun\",\n    \"Jul\",\n    \"Agt\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Des\",\n  ],\n\n  wide: [\n    \"Januari\",\n    \"Februari\",\n    \"Maret\",\n    \"April\",\n    \"Mei\",\n    \"Juni\",\n    \"Juli\",\n    \"Agustus\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Desember\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"M\", \"S\", \"S\", \"R\", \"K\", \"J\", \"S\"],\n  short: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n  abbreviated: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n  wide: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"tengah malam\",\n    noon: \"tengah hari\",\n    morning: \"pagi\",\n    afternoon: \"siang\",\n    evening: \"sore\",\n    night: \"malam\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // Can't use \"pertama\", \"kedua\" because can't be parsed\n\n  return \"ke-\" + number;\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^ke-(\\d+)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(sm|m)/i,\n  abbreviated: /^(s\\.?\\s?m\\.?|s\\.?\\s?e\\.?\\s?u\\.?|m\\.?|e\\.?\\s?u\\.?)/i,\n  wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i,\n};\nconst parseEraPatterns = {\n  any: [/^s/i, /^(m|e)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^K-?\\s[1234]/i,\n  wide: /^Kuartal ke-?\\s?[1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,\n  wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^ma/i,\n    /^ap/i,\n    /^me/i,\n    /^jun/i,\n    /^jul/i,\n    /^ag/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[srkjm]/i,\n  short: /^(min|sen|sel|rab|kam|jum|sab)/i,\n  abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i,\n  wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^m/i, /^s/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],\n  any: [/^m/i, /^sen/i, /^sel/i, /^r/i, /^k/i, /^j/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|tengah m|tengah h|(di(\\swaktu)?) (pagi|siang|sore|malam))/i,\n  any: /^([ap]\\.?\\s?m\\.?|tengah malam|tengah hari|(di(\\swaktu)?) (pagi|siang|sore|malam))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^pm/i,\n    midnight: /^tengah m/i,\n    noon: /^tengah h/i,\n    morning: /pagi/i,\n    afternoon: /siang/i,\n    evening: /sore/i,\n    night: /malam/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { format, set } from \"date-fns\";\nimport { id as indo } from \"date-fns/locale\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { Link, router, useForm } from \"@inertiajs/react\";\n\nimport { ChevronLeft } from \"lucide-react\";\n\nimport DefaultLayout from \"@/Layouts/DefaultLayout\";\n\nimport MaxWidthWrapper from \"@/Components/MaxWidthWrapper\";\nimport { Button, buttonVariants } from \"@/Components/ui/button\";\nimport { Input } from \"@/Components/ui/input\";\nimport { Label } from \"@/Components/ui/label\";\nimport { Toaster } from \"@/Components/ui/toaster\";\nimport { useToast } from \"@/Components/ui/use-toast\";\n\nimport { TaskData } from \"@/lib/types/Mading\";\n\nexport default function Page({ id }) {\n  const [tugasData, setTugasData] = useState<TaskData | null>(null);\n  const [urlError, setUrlError] = useState(new Map());\n  const [csrfToken, setCsrfToken] = useState(\"\");\n\n  const { toast } = useToast();\n\n  const { data: formData, setData: setFormData } = useForm<{\n    tugas_id: number[];\n    jawaban: string[];\n  }>({\n    tugas_id: [],\n    jawaban: [],\n  });\n\n  const addOrUpdateJawaban = (index, value) => {\n    const newJawaban = [...formData.jawaban];\n    newJawaban[index] = value;\n    setFormData(\"jawaban\", newJawaban);\n  };\n\n  const getTugasData = async () => {\n    try {\n      const response = await fetch(route(\"mading.tugas\", { id }), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      }\n\n      const data = await response.json();\n      setTugasData(data);\n\n      let tugasId: number[] = [];\n      data.tugas.forEach((tugas, index) => {\n        tugasId.push(tugas.id);\n        addOrUpdateJawaban(index, \"\");\n      });\n      setFormData(\"tugas_id\", tugasId);\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Gagal mendapatkan data tugas\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    getTugasData();\n\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await fetch(route(\"csrf\"));\n        const data = await response.json();\n        setCsrfToken(data.csrfToken);\n      } catch (error) {\n        console.error(\"Error fetching CSRF token:\", error);\n      }\n    };\n\n    fetchCsrfToken();\n  }, []);\n\n  const validateUrl = (\n    tipe_link: string,\n    tugas_id: number,\n    url: string,\n    index: number,\n  ) => {\n    switch (tipe_link) {\n      case \"tiktok\":\n        validateTiktokUrl(tugas_id, url, index);\n        break;\n      case \"instagram\":\n        validateInstagramUrl(tugas_id, url, index);\n        break;\n      case \"drive\":\n        validateGDriveUrl(tugas_id, url, index);\n        break;\n      case \"linkedin\":\n        validateLinkedIn(tugas_id, url, index);\n        break;\n    }\n  };\n\n  // Function to check if all URLs are valid\n  const allLinksValid = () => {\n    for (const [key, value] of urlError.entries()) {\n      if (value !== \"\") {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const validateTiktokUrl = useDebouncedCallback((tugas_id, url, index) => {\n    if (!/^https:\\/\\/(www\\.)?(tiktok\\.com|vt\\.tiktok\\.com)\\/.*$/g.test(url)) {\n      setUrlError(new Map(urlError).set(tugas_id, \"link harus dari TikTok\"));\n      return;\n    }\n\n    setUrlError(new Map(urlError).set(tugas_id, \"\"));\n    addOrUpdateJawaban(index, url); // Update jawaban\n  }, 200);\n\n  const validateInstagramUrl = useDebouncedCallback(\n    async (tugas_id, url, index) => {\n      if (!/^https:\\/\\/(www\\.)?instagram\\.com\\/.*$/g.test(url)) {\n        setUrlError(\n          new Map(urlError).set(tugas_id, \"link harus dari Instagram\"),\n        );\n        return;\n      }\n\n      setUrlError(new Map(urlError).set(tugas_id, \"\"));\n      addOrUpdateJawaban(index, url); // Update jawaban\n    },\n    200,\n  );\n\n  const validateLinkedIn = useDebouncedCallback(\n    async (tugas_id, url, index) => {\n      if (\n        !/^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)/g.test(url)\n      ) {\n        setUrlError(\n          new Map(urlError).set(tugas_id, \"link harus dari LinkedIn\"),\n        );\n        return;\n      }\n\n      setUrlError(new Map(urlError).set(tugas_id, \"\"));\n      addOrUpdateJawaban(index, url); // Update jawaban\n    },\n    200,\n  );\n\n  const validateGDriveUrl = useDebouncedCallback(\n    async (tugas_id, url, index) => {\n      if (!/^https:\\/\\/(www\\.)?\\w+\\.google\\.com\\/.*$/g.test(url)) {\n        setUrlError(\n          new Map(urlError).set(tugas_id, \"link harus dari Google Drive\"),\n        );\n        return;\n      }\n\n      let id = url.split(\"/\")[5];\n\n      let response = await fetch(\n        `https://www.googleapis.com/drive/v2/files/${id}?key=${import.meta.env.VITE_GOOGLE_API_KEY}`,\n      );\n\n      if (!response.ok) {\n        setUrlError(\n          new Map(urlError).set(\n            tugas_id,\n            \"Link drive belum publik, silahkan coba lagi\",\n          ),\n        );\n\n        return;\n      }\n\n      setUrlError(new Map(urlError).set(tugas_id, \"\"));\n      addOrUpdateJawaban(index, url); // Update jawaban\n    },\n    200,\n  );\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch(route(\"mading.store\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: JSON.stringify({\n          tugas_id: formData.tugas_id,\n          jawaban: formData.jawaban,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"HTTP status \" + response.status);\n      } else {\n        toast({\n          title: \"Berhasil\",\n          description: \"Tugas berhasil disubmit\",\n        });\n      }\n\n      router.replace(route(\"petaka\"));\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Gagal mensubmit tugas\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <DefaultLayout isSolid={true}>\n        <div className=\"bg-pattern-white pt-28\">\n          <MaxWidthWrapper className=\"min-h-screen\">\n            <div className=\"px-2.5 bg-white/80 py-5 rounded-md md:px-5 lg:px-10 xl:px-28\">\n              <Link\n                href={route(\"mading\")}\n                className={`${buttonVariants({ variant: \"outline\" })} bg-transparent hover:bg-transparent shadow-none items-center border-none flex gap-2 -ml-5`}\n              >\n                <ChevronLeft />\n                <span>Kembali</span>\n              </Link>\n              <h2\n                data-aos=\"fade-down\"\n                data-aos-duration=\"1000\"\n                className=\"font-montserrat font-bold text-jaffa-700 w-fit pt-[30px] text-3xl\"\n              >\n                Pengumpulan Tugas Day - {id}\n              </h2>\n\n              <div className=\"flex flex-col gap-6 mt-10\">\n                {tugasData?.tugas.map((tugas, index) => (\n                  <div className=\"flex flex-col\" key={index}>\n                    <Label\n                      htmlFor=\"input-tugas\"\n                      className=\"md:flex-row flex flex-col justify-between gap-1 text-left\"\n                    >\n                      <p className=\"font-bold capitalize\">\n                        Link pengumpulan tugas {tugas.judul}\n                      </p>\n                      <p className=\"text-red-600\">\n                        Batas pengumpulan:{\" \"}\n                        {format(new Date(tugas.deadline), \"dd MMMM yyyy\", {\n                          locale: indo,\n                        })}\n                      </p>\n                    </Label>\n\n                    <Input\n                      type=\"text\"\n                      id=\"input-tugas\"\n                      onChange={(e) => {\n                        validateUrl(\n                          tugas.tipe_link,\n                          tugas.id,\n                          e.target.value,\n                          index,\n                        );\n                      }}\n                      placeholder={\n                        tugas.tipe_link === \"tiktok\"\n                          ? \"https://www.tiktok.com/...\"\n                          : tugas.tipe_link === \"instagram\"\n                            ? \"https://www.instagram.com/...\"\n                            : tugas.tipe_link === \"drive\"\n                              ? \"https://drive.google.com/...\"\n                              : \"https://www.linkedin.com/in/...\"\n                      }\n                      className=\"mt-2\"\n                    />\n                    {urlError.get(tugas.id) ? (\n                      <span className=\"text-red-500 text-[12px]\">\n                        {urlError.get(tugas.id)}\n                      </span>\n                    ) : urlError.get(tugas.id) === \"\" ? (\n                      <span className=\"text-[12px] text-green-500\">\n                        Link valid\n                      </span>\n                    ) : null}\n                  </div>\n                ))}\n\n                <Button\n                  onClick={handleSubmit}\n                  disabled={!allLinksValid() || !formData.jawaban.length}\n                  className=\"bg-jaffa-700 hover:bg-jaffa-700/90 w-full mt-5 transition duration-200 ease-in-out\"\n                >\n                  Submit Tugas {id}\n                </Button>\n              </div>\n            </div>\n          </MaxWidthWrapper>\n        </div>\n      </DefaultLayout>\n\n      <Toaster />\n    </>\n  );\n}\n"],"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatLong","date","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","id","code","formatDistance","token","count","options","result","tokenValue","replace","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","Number","era","buildLocalizeFn","values","narrow","abbreviated","wide","quarter","argumentCallback","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","formattingValues","defaultFormattingWidth","match","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","value","parseInt","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","any","defaultParseWidth","index","weekStartsOn","firstWeekContainsDate","Page","tugasData","setTugasData","useState","urlError","setUrlError","Map","csrfToken","setCsrfToken","toast","useToast","data","formData","setData","setFormData","useForm","tugas_id","jawaban","addOrUpdateJawaban","newJawaban","useEffect","async","response","fetch","route","method","headers","ok","Error","status","json","tugasId","tugas","forEach","push","error","title","description","variant","getTugasData","console","fetchCsrfToken","validateTiktokUrl","useDebouncedCallback","url","test","set","validateInstagramUrl","validateLinkedIn","validateGDriveUrl","split","jsxs","Fragment","children","jsx","DefaultLayout","isSolid","className","MaxWidthWrapper","Link","href","buttonVariants","ChevronLeft","map","Label","htmlFor","judul","format","Date","deadline","locale","indo","Input","type","onChange","e","tipe_link","validateUrl","target","placeholder","get","Button","onClick","body","JSON","stringify","router","disabled","key","entries","allLinksValid","length","Toaster"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}