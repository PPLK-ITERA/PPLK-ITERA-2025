import{r as e,j as a,b as r}from"./DPkeyV0Z.js";import{c as l,P as o}from"./DC8fWKBq.js";import{a as n}from"./Ba4YecwC.js";var t="Progress",s=100,[i,u]=l(t),[d,f]=i(t),m=e.forwardRef(((e,r)=>{const{__scopeProgress:l,value:n=null,max:t,getValueLabel:i=c,...u}=e;!t&&0!==t||h(t)||console.error(`Invalid prop \`max\` of value \`${`${t}`}\` supplied to \`${"Progress"}\`. Only numbers greater than 0 are valid max values. Defaulting to \`100\`.`);const f=h(t)?t:s;null===n||N(n,f)||console.error(function(e,a){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${a}\`. The \`value\` prop must be:\n  - a positive number\n  - less than the value passed to \`max\` (or 100 if no \`max\` prop is set)\n  - \`null\` or \`undefined\` if the progress is indeterminate.\n\nDefaulting to \`null\`.`}(`${n}`,"Progress"));const m=N(n,f)?n:null,v=x(m)?i(m,f):void 0;return a.jsx(d,{scope:l,value:m,max:f,children:a.jsx(o.div,{"aria-valuemax":f,"aria-valuemin":0,"aria-valuenow":x(m)?m:void 0,"aria-valuetext":v,role:"progressbar","data-state":g(m,f),"data-value":m??void 0,"data-max":f,...u,ref:r})})}));m.displayName=t;var v="ProgressIndicator",p=e.forwardRef(((e,r)=>{const{__scopeProgress:l,...n}=e,t=f(v,l);return a.jsx(o.div,{"data-state":g(t.value,t.max),"data-value":t.value??void 0,"data-max":t.max,...n,ref:r})}));function c(e,a){return`${Math.round(e/a*100)}%`}function g(e,a){return null==e?"indeterminate":e===a?"complete":"loading"}function x(e){return"number"==typeof e}function h(e){return x(e)&&!isNaN(e)&&e>0}function N(e,a){return x(e)&&!isNaN(e)&&e<=a&&e>=0}p.displayName=v;var b=m,j=p;const P=r.forwardRef((({className:e,value:r,...l},o)=>a.jsx(b,{ref:o,className:"relative h-4 w-full overflow-hidden rounded-full bg-[#FEF3F2] outline outline-1 outline-[#1F1D1D]/30 -outline-offset-1",...l,children:a.jsx(j,{className:n("h-full w-full flex-1 rounded-full bg-gradient-to-r from-candlelight-800 to-candlelight-950 transition-all",e),style:{transform:`translateX(-${100-(r||0)}%)`}})})));P.displayName=b.displayName;export{P};
