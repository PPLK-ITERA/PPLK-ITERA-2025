{"version":3,"file":"CKrqVrDa.js","sources":["../../../node_modules/@tabler/icons-react/dist/esm/icons/IconSearch.mjs","../../../resources/js/Components/relasi/UserList.tsx","../../../resources/js/lib/data/relasi.ts"],"sourcesContent":["/**\n * @license @tabler/icons-react v3.11.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createReactComponent from '../createReactComponent.mjs';\n\nvar IconSearch = createReactComponent(\"outline\", \"search\", \"IconSearch\", [[\"path\", { \"d\": \"M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0\", \"key\": \"svg-0\" }], [\"path\", { \"d\": \"M21 21l-6 -6\", \"key\": \"svg-1\" }]]);\n\nexport { IconSearch as default };\n//# sourceMappingURL=IconSearch.mjs.map\n","import ProfileCard from \"./ProfileCard\";\n\nimport React from \"react\";\n\nimport { User } from \"@/lib/types/User\";\n\ntype Props = { users: Partial<User>[]; className?: string };\n\nexport default function UserList({ users, className }: Props) {\n    return (\n        <div\n            className={`flex flex-wrap max-w-7xl mx-auto place-content-center place-items-center gap-4 mt-8 ${className}`}\n        >\n            {users.slice(0, 10).map((user, index) => (\n                <ProfileCard className=\"h-72 md:h-80 w-36 md:w-48\" user={user} />\n            ))}\n        </div>\n    );\n}\n","import { User } from \"../types/User\";\nimport { UserSearchResponse } from \"../types/UserSearchResponse\";\n\nexport async function fetchTopFollowers(): Promise<User[]> {\n    const response = await fetch(`${route(\"relasi.index.topfollowers\")}`);\n    const json = await response.json();\n    return json;\n}\n\nexport async function fetchSort(\n    order_by: string,\n    direction: string,\n): Promise<Partial<User>[]> {\n    const response = await fetch(\n        `${route(\"relasi.index.sort\")}?order_by=${order_by}&direction=${direction}`,\n    );\n    const json = await response.json();\n    return json;\n}\n\nexport async function fetchSearch(search: string): Promise<UserSearchResponse> {\n    const response = await fetch(\n        `${route(\"relasi.index.search\")}?search=${search}`,\n    );\n    const json = await response.json();\n    return json;\n}\n"],"names":["IconSearch","createReactComponent","d","key","UserList","users","className","jsxRuntimeExports","jsx","children","slice","map","user","index","ProfileCard","async","fetchTopFollowers","response","fetch","route","json","fetchSort","order_by","direction","fetchSearch","search"],"mappings":";;;;;;GASG,IAACA,EAAaC,EAAqB,UAAW,SAAU,aAAc,CAAC,CAAC,OAAQ,CAAEC,EAAK,6CAA8CC,IAAO,UAAY,CAAC,OAAQ,CAAED,EAAK,eAAgBC,IAAO,YCDlM,SAAwBC,GAASC,MAAEA,EAAOC,UAAAA,IAElC,OAAAC,EAAAC,IAAC,MAAA,CACGF,UAAW,uFAAuFA,IAEjGG,SAAMJ,EAAAK,MAAM,EAAG,IAAIC,KAAI,CAACC,EAAMC,IAC1BL,EAAAA,IAAAM,EAAA,CAAYR,UAAU,4BAA4BM,YAInE,CCfAG,eAAsBC,IAClB,MAAMC,QAAiBC,MAAM,GAAGC,MAAM,gCAE/B,aADYF,EAASG,MAEhC,CAEsBL,eAAAM,EAClBC,EACAC,GAEA,MAAMN,QAAiBC,MACnB,GAAGC,MAAM,iCAAiCG,eAAsBC,KAG7D,aADYN,EAASG,MAEhC,CAEAL,eAAsBS,EAAYC,GAC9B,MAAMR,QAAiBC,MACnB,GAAGC,MAAM,iCAAiCM,KAGvC,aADYR,EAASG,MAEhC","x_google_ignoreList":[0]}