{"version":3,"file":"Bgl0ePoh.js","sources":["../../../resources/js/Components/fragments/QuizSkeleton.tsx","../../../resources/js/Components/asesmen/AsesmenForm.tsx","../../../resources/js/Pages/Asesmen/Page.tsx"],"sourcesContent":["import React from \"react\";\n\nexport const QuizSkeleton = ({ className = \"\" }: { className: string }) => {\n    return (\n        <div className={`max-md:grow ${className}`}>\n            <div className=\"h-6 w-full animate-pulse rounded-lg bg-gray-300 text-xl font-semibold\"></div>\n            <div className=\"mt-2 h-4 w-full animate-pulse rounded-lg bg-gray-300\"></div>\n            <div className=\"mt-4 h-16 w-full animate-pulse rounded-lg bg-gray-300 p-4 shadow-inner\"></div>\n            <ul className=\"mt-8 flex w-full flex-col gap-2\">\n                {Array.from({ length: 4 }).map((_, index) => (\n                    <li key={index}>\n                        <div className=\"h-12 w-full animate-pulse rounded-lg bg-gray-300\"></div>\n                    </li>\n                ))}\n            </ul>\n            <div className=\"max-md:grow\"></div>\n            <div className=\"my-8 h-12 w-full animate-pulse rounded-lg bg-gray-300\"></div>\n        </div>\n    );\n};\n","\"use client\";\n\nimport { Toast } from \"../ui/toast\";\nimport { Toaster } from \"../ui/toaster\";\nimport clsx from \"clsx\";\nimport { motion } from \"framer-motion\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { router } from \"@inertiajs/react\";\n\nimport { ArrowRight, Flag } from \"lucide-react\";\n\nimport { QuizSkeleton } from \"@/Components/fragments/QuizSkeleton\";\nimport { Button } from \"@/Components/ui/button\";\nimport { Progress } from \"@/Components/ui/progress\";\nimport { useToast } from \"@/Components/ui/use-toast\";\n\nimport { Question } from \"@/lib/types/Question\";\n\nexport default function AsesmenForm() {\n    const { toast } = useToast();\n\n    const [questions, setQuestions] = useState<Question[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [sendingAnswer, setSendingAnswer] = useState(false);\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [selectedAnswerId, setSelectedAnswerId] = useState<number | null>(\n        null,\n    );\n    const [csrfToken, setCsrfToken] = useState(\"\");\n\n    async function mGetQuestions() {\n        setLoading(true);\n        const response = await fetch(route(\"asesmen.question\"))\n            .then((response) => response.json())\n            .then((json) => {\n                setQuestions(json.data.questions);\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        // Fungsi untuk mendapatkan token CSRF dari API\n        const fetchCsrfToken = async () => {\n            try {\n                const response = await fetch(route(\"csrf\"));\n                const data = await response.json();\n                setCsrfToken(data.csrfToken);\n            } catch (error) {\n                console.error(\"Error fetching CSRF token:\", error);\n            }\n        };\n\n        fetchCsrfToken();\n        // if (!token) {\n        //     router.push(\"/\");\n        //     return;\n        // }\n        mGetQuestions();\n    }, []);\n\n    const onAnswerClick = (answerId: number) => {\n        setSelectedAnswerId(answerId);\n    };\n\n    async function submitAnswer() {\n        if (selectedAnswerId === null) return;\n        try {\n            setSendingAnswer(true);\n            await fetch(\n                route(\"asesmen.answer\", {\n                    question_id: questions[currentQuestion].id,\n                    answer_id: selectedAnswerId,\n                }),\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"X-CSRF-TOKEN\": csrfToken,\n                    },\n                },\n            );\n            setSendingAnswer(false);\n            if (currentQuestion === questions.length - 1) {\n                router.get(route(\"asesmen.result\"));\n                return;\n            }\n            setCurrentQuestion(currentQuestion + 1);\n            setSelectedAnswerId(null);\n        } catch (error) {\n            toast({\n                variant: \"destructive\",\n                title: \"Gagal mengirim jawaban, mohon coba lagi hehe\",\n            });\n        }\n    }\n\n    return (\n        <motion.div\n            initial={{ opacity: 0, scale: 0.5 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.8, ease: [0.16, 1, 0.3, 1] }}\n            className={`mt-20 mx-auto px-8 flex flex-col items-center justify-center h-full max-w-3xl text-start place-content-center text-white gap-4 overflow-y-auto font-montserrat`}\n        >\n            {loading ? (\n                <QuizSkeleton className=\"w-full\" />\n            ) : (\n                <div className=\"flex flex-col gap-4 w-full\">\n                    <div className=\"max-md:grow\" />\n\n                    <span className=\"text-sm md:text-xl font-semibold w-full text-moccaccino-950\">\n                        Pertanyaan {currentQuestion + 1}/{questions.length}\n                    </span>\n                    <Progress\n                        value={((currentQuestion + 1) * 100) / questions.length}\n                    />\n                    <div className=\"w-full min-h-48 max-h-64 overflow-y-auto p-4 rounded-lg shadow-inner bg-black/25\">\n                        <h2 className=\"max-md:text-sm font-semibold text-justify\">\n                            {questions[currentQuestion].teks_pertanyaan}\n                        </h2>\n                    </div>\n\n                    <ul className=\"w-full flex flex-col gap-2 mt-4 md:mt-8\">\n                        {questions[currentQuestion].answers.map((ans) => (\n                            <li key={ans.id}>\n                                <Button\n                                    disabled={sendingAnswer}\n                                    onClick={() => onAnswerClick(ans.id)}\n                                    className={clsx(\n                                        {\n                                            \" text-candlelight-800 hover:bg-jaffa-100 ring-1 ring-black/5 \":\n                                                ans.id !== selectedAnswerId,\n                                            \" bg-gradient-to-r from-candlelight-800 to-candlelight-950\":\n                                                ans.id === selectedAnswerId,\n                                        },\n                                        \"bg-white transition duration-400 w-full h-full font-medium text-wrap py-2 max-md:text-sm \",\n                                    )}\n                                >\n                                    {ans.teks_jawaban}\n                                </Button>\n                            </li>\n                        ))}\n                    </ul>\n\n                    <div className=\"max-md:grow\"></div>\n\n                    <Button\n                        onClick={submitAnswer}\n                        disabled={selectedAnswerId === null || sendingAnswer}\n                        className=\"w-full bg-jaffa-600 my-4 md:my-8 hover:bg-jaffa-600/80\"\n                    >\n                        {currentQuestion < questions.length - 1\n                            ? \"Next\"\n                            : \"Submit\"}\n                        {currentQuestion < questions.length - 1 ? (\n                            <ArrowRight className=\"ml-2\" />\n                        ) : (\n                            <svg\n                                className=\"ml-2\"\n                                width=\"11\"\n                                height=\"13\"\n                                viewBox=\"0 0 11 13\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    d=\"M0.5 1.62503C0.500012 1.54192 0.516601 1.45964 0.548796 1.38302C0.580991 1.30639 0.628146 1.23696 0.6875 1.17878C1.36865 0.511053 2.27866 0.127987 3.23229 0.107551C4.18592 0.0871153 5.11149 0.430846 5.82063 1.06878L6.04 1.27378C6.49589 1.67322 7.08138 1.89342 7.6875 1.89342C8.29363 1.89342 8.87911 1.67322 9.335 1.27378L9.49063 1.1319C9.87188 0.83003 10.445 1.07128 10.4969 1.5544L10.5 1.62503V7.25003C10.5 7.33314 10.4834 7.41542 10.4512 7.49204C10.419 7.56867 10.3719 7.6381 10.3125 7.69628C9.63135 8.36401 8.72134 8.74707 7.76772 8.76751C6.81409 8.78794 5.88851 8.44421 5.17938 7.80628L4.96 7.60128C4.51846 7.21441 3.95486 6.99526 3.36795 6.98223C2.78104 6.9692 2.20827 7.16313 1.75 7.53003V11.625C1.74982 11.7843 1.68883 11.9376 1.57947 12.0534C1.47011 12.1692 1.32065 12.2389 1.16163 12.2483C1.0026 12.2576 0.846013 12.2059 0.723855 12.1036C0.601697 12.0014 0.52319 11.8563 0.504375 11.6982L0.5 11.625V1.62503Z\"\n                                    fill=\"white\"\n                                />\n                            </svg>\n                        )}\n                    </Button>\n                </div>\n            )}\n            <Toaster />\n        </motion.div>\n    );\n}\n","import DefaultLayout from \"@/Layouts/DefaultLayout\";\n\nimport React from \"react\";\n\nimport Navbar from \"@/Components/Navbar\";\nimport AsesmenForm from \"@/Components/asesmen/AsesmenForm\";\n\nfunction Page({ auth }) {\n    return (\n        <div>\n            <DefaultLayout isSolid={true}>\n                <div className=\"bg-pattern-white\">\n                    <AsesmenForm />\n                </div>\n            </DefaultLayout>\n        </div>\n    );\n}\n\nexport default Page;\n"],"names":["QuizSkeleton","className","jsxs","children","jsx","Array","from","length","map","_","index","AsesmenForm","toast","useToast","questions","setQuestions","useState","loading","setLoading","sendingAnswer","setSendingAnswer","currentQuestion","setCurrentQuestion","selectedAnswerId","setSelectedAnswerId","csrfToken","setCsrfToken","useEffect","async","response","fetch","route","data","json","error","console","then","jsxRuntimeExports","motion","div","initial","opacity","scale","animate","transition","duration","ease","Progress","value","teks_pertanyaan","answers","ans","Button","disabled","onClick","onAnswerClick","answerId","id","clsx","teks_jawaban","question_id","answer_id","method","headers","yt","get","variant","title","ArrowRight","width","height","viewBox","fill","xmlns","d","Toaster","Page","auth","DefaultLayout","isSolid"],"mappings":"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"}