{"version":3,"file":"3M3m1EwH.js","sources":["../../../node_modules/embla-carousel-autoplay/esm/embla-carousel-autoplay.esm.js"],"sourcesContent":["const defaultOptions = {\n  active: true,\n  breakpoints: {},\n  delay: 4000,\n  jump: false,\n  playOnInit: true,\n  stopOnFocusIn: true,\n  stopOnInteraction: true,\n  stopOnMouseEnter: false,\n  stopOnLastSnap: false,\n  rootNode: null\n};\n\nfunction Autoplay(userOptions = {}) {\n  let options;\n  let emblaApi;\n  let destroyed;\n  let playing = false;\n  let resume = true;\n  let jump = false;\n  let timer = 0;\n  function init(emblaApiInstance, optionsHandler) {\n    emblaApi = emblaApiInstance;\n    const {\n      mergeOptions,\n      optionsAtMedia\n    } = optionsHandler;\n    const optionsBase = mergeOptions(defaultOptions, Autoplay.globalOptions);\n    const allOptions = mergeOptions(optionsBase, userOptions);\n    options = optionsAtMedia(allOptions);\n    if (emblaApi.scrollSnapList().length <= 1) return;\n    jump = options.jump;\n    destroyed = false;\n    const {\n      eventStore,\n      ownerDocument\n    } = emblaApi.internalEngine();\n    const emblaRoot = emblaApi.rootNode();\n    const root = options.rootNode && options.rootNode(emblaRoot) || emblaRoot;\n    const container = emblaApi.containerNode();\n    emblaApi.on('pointerDown', stopTimer);\n    if (!options.stopOnInteraction) {\n      emblaApi.on('pointerUp', startTimer);\n    }\n    if (options.stopOnMouseEnter) {\n      eventStore.add(root, 'mouseenter', () => {\n        resume = false;\n        stopTimer();\n      });\n      if (!options.stopOnInteraction) {\n        eventStore.add(root, 'mouseleave', () => {\n          resume = true;\n          startTimer();\n        });\n      }\n    }\n    if (options.stopOnFocusIn) {\n      eventStore.add(container, 'focusin', stopTimer);\n      if (!options.stopOnInteraction) {\n        eventStore.add(container, 'focusout', startTimer);\n      }\n    }\n    eventStore.add(ownerDocument, 'visibilitychange', visibilityChange);\n    if (options.playOnInit && !documentIsHidden()) startTimer();\n  }\n  function destroy() {\n    emblaApi.off('pointerDown', stopTimer).off('pointerUp', startTimer);\n    stopTimer();\n    destroyed = true;\n    playing = false;\n  }\n  function startTimer() {\n    if (destroyed) return;\n    if (!resume) return;\n    if (!playing) emblaApi.emit('autoplay:play');\n    const {\n      ownerWindow\n    } = emblaApi.internalEngine();\n    ownerWindow.clearInterval(timer);\n    timer = ownerWindow.setInterval(next, options.delay);\n    playing = true;\n  }\n  function stopTimer() {\n    if (destroyed) return;\n    if (playing) emblaApi.emit('autoplay:stop');\n    const {\n      ownerWindow\n    } = emblaApi.internalEngine();\n    ownerWindow.clearInterval(timer);\n    timer = 0;\n    playing = false;\n  }\n  function visibilityChange() {\n    if (documentIsHidden()) {\n      resume = playing;\n      return stopTimer();\n    }\n    if (resume) startTimer();\n  }\n  function documentIsHidden() {\n    const {\n      ownerDocument\n    } = emblaApi.internalEngine();\n    return ownerDocument.visibilityState === 'hidden';\n  }\n  function play(jumpOverride) {\n    if (typeof jumpOverride !== 'undefined') jump = jumpOverride;\n    resume = true;\n    startTimer();\n  }\n  function stop() {\n    if (playing) stopTimer();\n  }\n  function reset() {\n    if (playing) play();\n  }\n  function isPlaying() {\n    return playing;\n  }\n  function next() {\n    const {\n      index\n    } = emblaApi.internalEngine();\n    const nextIndex = index.clone().add(1).get();\n    const lastIndex = emblaApi.scrollSnapList().length - 1;\n    const kill = options.stopOnLastSnap && nextIndex === lastIndex;\n    if (kill) stopTimer();\n    if (emblaApi.canScrollNext()) {\n      emblaApi.scrollNext(jump);\n    } else {\n      emblaApi.scrollTo(0, jump);\n    }\n  }\n  const self = {\n    name: 'autoplay',\n    options: userOptions,\n    init,\n    destroy,\n    play,\n    stop,\n    reset,\n    isPlaying\n  };\n  return self;\n}\nAutoplay.globalOptions = undefined;\n\nexport { Autoplay as default };\n//# sourceMappingURL=embla-carousel-autoplay.esm.js.map\n"],"names":["defaultOptions","active","breakpoints","delay","jump","playOnInit","stopOnFocusIn","stopOnInteraction","stopOnMouseEnter","stopOnLastSnap","rootNode","Autoplay","userOptions","options","emblaApi","destroyed","playing","resume","timer","startTimer","emit","ownerWindow","internalEngine","clearInterval","setInterval","next","stopTimer","visibilityChange","documentIsHidden","ownerDocument","visibilityState","play","jumpOverride","index","nextIndex","clone","add","get","lastIndex","scrollSnapList","length","canScrollNext","scrollNext","scrollTo","name","init","emblaApiInstance","optionsHandler","mergeOptions","optionsAtMedia","optionsBase","globalOptions","allOptions","eventStore","emblaRoot","root","container","containerNode","on","destroy","off","stop","reset","isPlaying"],"mappings":"AAAA,MAAMA,EAAiB,CACrBC,QAAQ,EACRC,YAAa,CAAE,EACfC,MAAO,IACPC,MAAM,EACNC,YAAY,EACZC,eAAe,EACfC,mBAAmB,EACnBC,kBAAkB,EAClBC,gBAAgB,EAChBC,SAAU,MAGZ,SAASC,EAASC,EAAc,IAC1B,IAAAC,EACAC,EACAC,EACAC,GAAU,EACVC,GAAS,EACTb,GAAO,EACPc,EAAQ,EAmDZ,SAASC,IACP,GAAIJ,EAAW,OACf,IAAKE,EAAQ,OACRD,GAAkBF,EAAAM,KAAK,iBACtB,MAAAC,YACJA,GACEP,EAASQ,iBACbD,EAAYE,cAAcL,GAC1BA,EAAQG,EAAYG,YAAYC,EAAMZ,EAAQV,OACpCa,GAAA,CACX,CACD,SAASU,IACP,GAAIX,EAAW,OACXC,GAAkBF,EAAAM,KAAK,iBACrB,MAAAC,YACJA,GACEP,EAASQ,iBACbD,EAAYE,cAAcL,GAClBA,EAAA,EACEF,GAAA,CACX,CACD,SAASW,IACP,GAAIC,IAEF,OADSX,EAAAD,EACFU,IAELT,MACL,CACD,SAASW,IACD,MAAAC,cACJA,GACEf,EAASQ,iBACb,MAAyC,WAAlCO,EAAcC,eACtB,CACD,SAASC,EAAKC,QACgB,IAAjBA,IAAqC5B,EAAA4B,GACvCf,GAAA,KAEV,CAUD,SAASQ,IACD,MAAAQ,MACJA,GACEnB,EAASQ,iBACPY,EAAYD,EAAME,QAAQC,IAAI,GAAGC,MACjCC,EAAYxB,EAASyB,iBAAiBC,OAAS,EACxC3B,EAAQJ,gBAAkByB,IAAcI,OAEjDxB,EAAS2B,gBACX3B,EAAS4B,WAAWtC,GAEXU,EAAA6B,SAAS,EAAGvC,EAExB,CAWM,MAVM,CACXwC,KAAM,WACN/B,QAASD,EACTiC,KAnHO,SAAKC,EAAkBC,GACnBjC,EAAAgC,EACL,MAAAE,aACJA,EAAAC,eACAA,GACEF,EACEG,EAAcF,EAAahD,EAAgBW,EAASwC,eACpDC,EAAaJ,EAAaE,EAAatC,GAE7C,GADAC,EAAUoC,EAAeG,GACrBtC,EAASyB,iBAAiBC,QAAU,EAAG,OAC3CpC,EAAOS,EAAQT,KACHW,GAAA,EACN,MAAAsC,WACJA,EAAAxB,cACAA,GACEf,EAASQ,iBACPgC,EAAYxC,EAASJ,WACrB6C,EAAO1C,EAAQH,UAAYG,EAAQH,SAAS4C,IAAcA,EAC1DE,EAAY1C,EAAS2C,gBAClB3C,EAAA4C,GAAG,cAAehC,GACtBb,EAAQN,mBACFO,EAAA4C,GAAG,YAAavC,GAEvBN,EAAQL,mBACC6C,EAAAjB,IAAImB,EAAM,cAAc,KACxBtC,GAAA,SAGNJ,EAAQN,mBACA8C,EAAAjB,IAAImB,EAAM,cAAc,KACxBtC,GAAA,UAKXJ,EAAQP,gBACC+C,EAAAjB,IAAIoB,EAAW,UAAW9B,GAChCb,EAAQN,mBACA8C,EAAAjB,IAAIoB,EAAW,WAAYrC,IAG/BkC,EAAAjB,IAAIP,EAAe,mBAAoBF,GAC9Cd,EAAQR,aAAeuB,KAA8BT,GAC1D,EAyECwC,QAxEF,WACE7C,EAAS8C,IAAI,cAAelC,GAAWkC,IAAI,YAAazC,OAE5CJ,GAAA,EACFC,GAAA,CACX,EAoECe,OACA8B,KA7BF,WACM7C,MACL,EA4BC8C,MA3BF,WACM9C,MACL,EA0BC+C,UAzBF,WACS,OAAA/C,CACR,EA0BH,CACAL,EAASwC,mBAAgB","x_google_ignoreList":[0]}