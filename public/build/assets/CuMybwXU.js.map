{"version":3,"file":"CuMybwXU.js","sources":["../../../resources/js/Components/ui/carousel.tsx"],"sourcesContent":["import useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\";\n\nimport * as React from \"react\";\n\nimport { ArrowLeft, ArrowRight } from \"lucide-react\";\n\nimport { Button } from \"@/Components/ui/button\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype CarouselApi = UseEmblaCarouselType[1];\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>;\ntype CarouselOptions = UseCarouselParameters[0];\ntype CarouselPlugin = UseCarouselParameters[1];\n\ntype CarouselProps = {\n  opts?: CarouselOptions;\n  plugins?: CarouselPlugin;\n  orientation?: \"horizontal\" | \"vertical\";\n  setApi?: (api: CarouselApi) => void;\n};\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0];\n  api: ReturnType<typeof useEmblaCarousel>[1];\n  scrollPrev: () => void;\n  scrollNext: () => void;\n  canScrollPrev: boolean;\n  canScrollNext: boolean;\n} & CarouselProps;\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null);\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext);\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\");\n  }\n\n  return context;\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins,\n    );\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false);\n    const [canScrollNext, setCanScrollNext] = React.useState(false);\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return;\n      }\n\n      setCanScrollPrev(api.canScrollPrev());\n      setCanScrollNext(api.canScrollNext());\n    }, []);\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev();\n    }, [api]);\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext();\n    }, [api]);\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault();\n          scrollPrev();\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault();\n          scrollNext();\n        }\n      },\n      [scrollPrev, scrollNext],\n    );\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return;\n      }\n\n      setApi(api);\n    }, [api, setApi]);\n\n    React.useEffect(() => {\n      if (!api) {\n        return;\n      }\n\n      onSelect(api);\n      api.on(\"reInit\", onSelect);\n      api.on(\"select\", onSelect);\n\n      return () => {\n        api?.off(\"select\", onSelect);\n      };\n    }, [api, onSelect]);\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    );\n  },\n);\nCarousel.displayName = \"Carousel\";\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel();\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className,\n        )}\n        {...props}\n      />\n    </div>\n  );\n});\nCarouselContent.displayName = \"CarouselContent\";\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel();\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className,\n      )}\n      {...props}\n    />\n  );\n});\nCarouselItem.displayName = \"CarouselItem\";\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel();\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className,\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"w-4 h-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  );\n});\nCarouselPrevious.displayName = \"CarouselPrevious\";\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel();\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className,\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"w-4 h-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  );\n});\nCarouselNext.displayName = \"CarouselNext\";\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n};\n"],"names":["CarouselContext","React.createContext","useCarousel","context","React.useContext","Error","Carousel","React.forwardRef","orientation","opts","setApi","plugins","className","children","props","ref","carouselRef","api","useEmblaCarousel","axis","canScrollPrev","setCanScrollPrev","React.useState","canScrollNext","setCanScrollNext","onSelect","React.useCallback","scrollPrev","scrollNext","handleKeyDown","event","key","preventDefault","React.useEffect","on","off","jsx","Provider","value","onKeyDownCapture","cn","role","displayName","CarouselContent","CarouselItem","CarouselPrevious","variant","size","jsxs","Button","disabled","onClick","ArrowLeft","CarouselNext","ArrowRight"],"mappings":"mNAiCA,MAAMA,EAAkBC,EAAAA,cAAiD,MAEzE,SAASC,IACP,MAAMC,EAAUC,EAAAA,WAAiBJ,GAEjC,IAAKG,EACH,MAAM,IAAIE,MAAM,kDAGlB,OAAOF,CACT,CAEA,MAAMG,EAAWC,EAAAA,YAIf,EAEIC,cAAc,aACdC,OACAC,SACAC,UACAC,YACAC,cACGC,GAELC,KAEA,MAAOC,EAAaC,GAAOC,EACzB,IACKT,EACHU,KAAsB,eAAhBX,EAA+B,IAAM,KAE7CG,IAEKS,EAAeC,GAAoBC,EAAAA,UAAe,IAClDC,EAAeC,GAAoBF,EAAAA,UAAe,GAEnDG,EAAWC,eAAmBT,IAC7BA,IAILI,EAAiBJ,EAAIG,iBACrBI,EAAiBP,EAAIM,iBAAe,GACnC,IAEGI,EAAaD,EAAAA,aAAkB,KACnCT,GAAKU,YAAA,GACJ,CAACV,IAEEW,EAAaF,EAAAA,aAAkB,KACnCT,GAAKW,YAAA,GACJ,CAACX,IAEEY,EAAgBH,EAAAA,aACnBI,IACmB,cAAdA,EAAMC,KACRD,EAAME,iBACNL,KACuB,eAAdG,EAAMC,MACfD,EAAME,iBACNJ,IACF,GAEF,CAACD,EAAYC,IAyBf,OAtBAK,EAAAA,WAAgB,KACThB,GAAQP,GAIbA,EAAOO,EAAG,GACT,CAACA,EAAKP,IAETuB,EAAAA,WAAgB,KACd,GAAKhB,EAQL,OAJAQ,EAASR,GACTA,EAAIiB,GAAG,SAAUT,GACjBR,EAAIiB,GAAG,SAAUT,GAEV,KACLR,GAAKkB,IAAI,SAAUV,EAAQ,CAC7B,GACC,CAACR,EAAKQ,IAGPW,EAAAA,IAACpC,EAAgBqC,SAAhB,CACCC,MAAO,CACLtB,cACAC,MACAR,OACAD,YACEA,IAA+B,MAAfC,GAAMU,KAAe,WAAa,cACpDQ,aACAC,aACAR,gBACAG,iBAGFV,SAAAuB,EAAAA,IAAC,MAAA,CACCrB,MACAwB,iBAAkBV,EAClBjB,UAAW4B,EAAG,WAAY5B,GAC1B6B,KAAK,SACL,uBAAqB,cACjB3B,EAEHD,cACH,IAKRP,EAASoC,YAAc,WAEvB,MAAMC,EAAkBpC,EAAAA,YAGtB,EAAGK,eAAcE,GAASC,KAC1B,MAAMC,YAAEA,EAAAR,YAAaA,GAAgBN,IAErC,OACEkC,EAAAA,IAAC,MAAA,CAAIrB,IAAKC,EAAaJ,UAAU,kBAC/BC,SAAAuB,EAAAA,IAAC,MAAA,CACCrB,MACAH,UAAW4B,EACT,OACgB,eAAhBhC,EAA+B,QAAU,iBACzCI,MAEEE,KAER,IAGJ6B,EAAgBD,YAAc,kBAE9B,MAAME,EAAerC,EAAAA,YAGnB,EAAGK,eAAcE,GAASC,KAC1B,MAAMP,YAAEA,GAAgBN,IAExB,OACEkC,EAAAA,IAAC,MAAA,CACCrB,MACA0B,KAAK,QACL,uBAAqB,QACrB7B,UAAW4B,EACT,qCACgB,eAAhBhC,EAA+B,OAAS,OACxCI,MAEEE,GAAA,IAIV8B,EAAaF,YAAc,eAE3B,MAAMG,EAAmBtC,EAAAA,YAGvB,EAAGK,YAAWkC,UAAU,UAAWC,OAAO,UAAWjC,GAASC,KAC9D,MAAMP,YAAEA,EAAAmB,WAAaA,EAAAP,cAAYA,GAAkBlB,IAEnD,OACE8C,EAAAA,KAACC,EAAA,CACClC,MACA+B,UACAC,OACAnC,UAAW4B,EACT,gCACgB,eAAhBhC,EACI,oCACA,8CACJI,GAEFsC,UAAW9B,EACX+B,QAASxB,KACLb,EAEJD,SAAA,GAAAuB,IAACgB,EAAA,CAAUxC,UAAU,YACrBwB,EAAAA,IAAC,OAAA,CAAKxB,UAAU,UAAUC,SAAA,qBAAc,IAI9CgC,EAAiBH,YAAc,mBAE/B,MAAMW,EAAe9C,EAAAA,YAGnB,EAAGK,YAAWkC,UAAU,UAAWC,OAAO,UAAWjC,GAASC,KAC9D,MAAMP,YAAEA,EAAAoB,WAAaA,EAAAL,cAAYA,GAAkBrB,IAEnD,OACE8C,EAAAA,KAACC,EAAA,CACClC,MACA+B,UACAC,OACAnC,UAAW4B,EACT,gCACgB,eAAhBhC,EACI,qCACA,iDACJI,GAEFsC,UAAW3B,EACX4B,QAASvB,KACLd,EAEJD,SAAA,GAAAuB,IAACkB,EAAA,CAAW1C,UAAU,YACtBwB,EAAAA,IAAC,OAAA,CAAKxB,UAAU,UAAUC,SAAA,iBAAU,IAI1CwC,EAAaX,YAAc"}