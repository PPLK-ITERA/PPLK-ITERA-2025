{"version":3,"file":"2pQSoltQ.js","sources":["../../../node_modules/@radix-ui/react-progress/dist/index.mjs","../../../resources/js/Components/ui/progress.tsx","../../../resources/assets/pilar/pilar1.png","../../../resources/assets/pilar/pilar2.png","../../../resources/assets/pilar/pilar3.png","../../../resources/assets/pilar/pilar4.png"],"sourcesContent":["\"use client\";\n\n// packages/react/progress/src/Progress.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, \"Progress\"));\n    }\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, \"Progress\"));\n    }\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n    return /* @__PURE__ */ jsx(ProgressProvider, { scope: __scopeProgress, value, max, children: /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": 0,\n        \"aria-valuenow\": isNumber(value) ? value : void 0,\n        \"aria-valuetext\": valueLabel,\n        role: \"progressbar\",\n        \"data-state\": getProgressState(value, max),\n        \"data-value\": value ?? void 0,\n        \"data-max\": max,\n        ...progressProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": getProgressState(context.value, context.max),\n        \"data-value\": context.value ?? void 0,\n        \"data-max\": context.max,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return `${Math.round(value / max * 100)}%`;\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;\nexport {\n  Indicator,\n  Progress,\n  ProgressIndicator,\n  Root,\n  createProgressScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className=\"relative h-4 w-full overflow-hidden rounded-full bg-[#FEF3F2] outline outline-1 outline-[#1F1D1D]/30 -outline-offset-1\"\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className={cn(\n        \"h-full w-full flex-1 rounded-full bg-gradient-to-r from-candlelight-800 to-candlelight-950 transition-all\",\n        className,\n      )}\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n","export default \"__VITE_ASSET__QohDfykh__\"","export default \"__VITE_ASSET__B18aaVHu__\"","export default \"__VITE_ASSET__B_jL1j24__\"","export default \"__VITE_ASSET__7YQH4cra__\""],"names":["PROGRESS_NAME","DEFAULT_MAX","createProgressContext","createProgressScope","createContextScope","ProgressProvider","useProgressContext","Progress","React.forwardRef","props","forwardedRef","__scopeProgress","value","valueProp","max","maxProp","getValueLabel","defaultGetValueLabel","progressProps","isValidMaxNumber","console","error","isValidValueNumber","propValue","componentName","getInvalidValueError","valueLabel","isNumber","jsx","scope","children","Primitive","div","role","getProgressState","ref","displayName","INDICATOR_NAME","ProgressIndicator","indicatorProps","context","Math","round","maxValue","isNaN","Root","Indicator","React","forwardRef","className","ProgressPrimitive.Root","ProgressPrimitive.Indicator","cn","style","transform","pilar1","pilar2","pilar3","pilar4"],"mappings":"2HAOA,IAAIA,EAAgB,WAChBC,EAAc,KACbC,EAAuBC,GAAuBC,EAAmBJ,IACjEK,EAAkBC,GAAsBJ,EAAsBF,GAC/DO,EAAWC,EAAAA,YACb,CAACC,EAAOC,KACN,MAAMC,gBACJA,EACAC,MAAOC,EAAY,KACnBC,IAAKC,EAAAC,cACLA,EAAgBC,KACbC,GACDT,GACCM,GAAuB,IAAZA,GAAmBI,EAAiBJ,IAClDK,QAAQC,MA4DL,mCA5D8B,GAAGN,uBAAW,0FAEjD,MAAMD,EAAMK,EAAiBJ,GAAWA,EAAUd,EAChC,OAAdY,GAAuBS,EAAmBT,EAAWC,IACvDM,QAAQC,MA0Dd,SAA8BE,EAAWC,GACvC,MAAO,qCAAqCD,qBAA6BC,mOAM3E,CAjEoBC,CAAqB,GAAGZ,IAAa,aAErD,MAAMD,EAAQU,EAAmBT,EAAWC,GAAOD,EAAY,KACzDa,EAAaC,EAASf,GAASI,EAAcJ,EAAOE,QAAO,EACjE,OAAuBc,EAAAA,IAAIvB,EAAkB,CAAEwB,MAAOlB,EAAiBC,QAAOE,MAAKgB,SAA0BF,EAAAA,IAC3GG,EAAUC,IACV,CACE,gBAAiBlB,EACjB,gBAAiB,EACjB,gBAAiBa,EAASf,GAASA,OAAQ,EAC3C,iBAAkBc,EAClBO,KAAM,cACN,aAAcC,EAAiBtB,EAAOE,GACtC,aAAcF,QAAS,EACvB,WAAYE,KACTI,EACHiB,IAAKzB,KAEN,IAGPH,EAAS6B,YAAcpC,EACvB,IAAIqC,EAAiB,oBACjBC,EAAoB9B,EAAAA,YACtB,CAACC,EAAOC,KACN,MAAMC,gBAAEA,KAAoB4B,GAAmB9B,EACzC+B,EAAUlC,EAAmB+B,EAAgB1B,GACnD,OAAuBiB,EAAAA,IACrBG,EAAUC,IACV,CACE,aAAcE,EAAiBM,EAAQ5B,MAAO4B,EAAQ1B,KACtD,aAAc0B,EAAQ5B,YAAS,EAC/B,WAAY4B,EAAQ1B,OACjByB,EACHJ,IAAKzB,GAEb,IAIA,SAASO,EAAqBL,EAAOE,GACnC,MAAO,GAAG2B,KAAKC,MAAM9B,EAAQE,EAAM,OACrC,CACA,SAASoB,EAAiBtB,EAAO+B,GAC/B,OAAgB,MAAT/B,EAAgB,gBAAkBA,IAAU+B,EAAW,WAAa,SAC7E,CACA,SAAShB,EAASf,GAChB,MAAwB,iBAAVA,CAChB,CACA,SAASO,EAAiBL,GACxB,OAAOa,EAASb,KAAS8B,MAAM9B,IAAQA,EAAM,CAC/C,CACA,SAASQ,EAAmBV,EAAOE,GACjC,OAAOa,EAASf,KAAWgC,MAAMhC,IAAUA,GAASE,GAAOF,GAAS,CACtE,CAfA0B,EAAkBF,YAAcC,EA2BhC,IAAIQ,EAAOtC,EACPuC,EAAYR,ECtFhB,MAAM/B,EAAWwC,EAAMC,YAGrB,EAAGC,YAAWrC,WAAUH,GAAS0B,IACjCP,EAAAA,IAACsB,EAAA,CACCf,MACAc,UAAU,4HACNxC,EAEJqB,SAAAF,EAAAA,IAACuB,EAAA,CACCF,UAAWG,EACT,4GACAH,GAEFI,MAAO,CAAEC,UAAW,eAAe,KAAO1C,GAAS,cAIzDL,EAAS6B,YAAcc,EAAuBd,YCxB9C,MAAAmB,EAAe,6BCAfC,EAAe,6BCAfC,EAAe,6BCAfC,EAAe","x_google_ignoreList":[0]}