{"version":3,"file":"B8WqkyxV.js","sources":["../../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../../../node_modules/@radix-ui/react-slot/dist/index.mjs","../../../node_modules/class-variance-authority/node_modules/clsx/dist/clsx.mjs","../../../node_modules/class-variance-authority/dist/index.mjs"],"sourcesContent":["// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/Slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map"],"names":["composeRefs","refs","node","forEach","ref","value","current","setRef","useComposedRefs","React.useCallback","useCallback","Slot","React.forwardRef","forwardRef","props","forwardedRef","children","slotProps","childrenArray","React.Children","toArray","slottable","find","isSlottable","newElement","newChildren","map","child","Children","count","only","React.isValidElement","jsx","SlotClone","React.cloneElement","cloneElement","displayName","childrenRef","element","getter","_a","Object","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","_b","getElementRef","mergeProps","Slottable","Fragment","isValidElement","type","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","filter","Boolean","join","r","e","t","f","n","Array","isArray","length","falsyToString","concat","cx","arguments","cva","base","config","variants","class","className","defaultVariants","getVariantClassNames","keys","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","entries","reduce","acc","param","key","getCompoundVariantClassNames","compoundVariants","param1","cvClass","cvClassName","compoundVariantOptions","every","includes"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}