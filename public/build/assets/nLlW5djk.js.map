{"version":3,"file":"nLlW5djk.js","sources":["../../../resources/js/Components/PaginationFAQ.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {\n    Pagination,\n    PaginationContent,\n    PaginationEllipsis,\n    PaginationItem,\n    PaginationLink,\n    PaginationNext,\n} from \"@/Components/ui/pagination\";\n\ninterface PaginationFAQProps {\n    currentPage: number;\n    totalPages: number;\n    onPageChange: (page: number) => void;\n}\n\nexport const PaginationFAQ: React.FC<PaginationFAQProps> = ({\n    currentPage,\n    totalPages,\n    onPageChange,\n}) => {\n    const handlePreviousClick = () => {\n        if (currentPage > 1) {\n            onPageChange(currentPage - 1);\n        }\n    };\n\n    const handleNextClick = () => {\n        if (currentPage < totalPages) {\n            onPageChange(currentPage + 1);\n        }\n    };\n\n    return (\n        <Pagination>\n            <PaginationContent className=\"mt-5\">\n                <PaginationItem>\n                    <button\n                        onClick={handlePreviousClick}\n                        className={`rounded-[10px] border bg-white px-2 py-2 text-black ${currentPage === 1 ? \"pointer-events-none opacity-50\" : \"\"}`}\n                        aria-label=\"Go to previous page\"\n                    >\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"icon icon-tabler icons-tabler-outline icon-tabler-chevron-left\"\n                        >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M15 6l-6 6l6 6\" />\n                        </svg>\n                    </button>\n                </PaginationItem>\n                {[...Array(totalPages)].map((_, index) => (\n                    <PaginationItem key={index}>\n                        <PaginationLink\n                            onClick={() => onPageChange(index + 1)}\n                            isActive={currentPage === index + 1}\n                            className={`rounded-[10px] border px-3 py-1 ${currentPage === index + 1 ? \"bg-jaffa-600 text-white hover:bg-jaffa-600 hover:text-white pointer-events-none\" : \"bg-white text-black cursor-pointer\"}`}\n                        >\n                            {index + 1}\n                        </PaginationLink>\n                    </PaginationItem>\n                ))}\n                <PaginationItem>\n                    <button\n                        onClick={handleNextClick}\n                        className={`rounded-[10px] border bg-white px-2 py-2 text-black ${currentPage === totalPages ? \"pointer-events-none opacity-50\" : \"\"}`}\n                    >\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"icon icon-tabler icons-tabler-outline icon-tabler-chevron-right\"\n                        >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M9 6l6 6l-6 6\" />\n                        </svg>\n                    </button>\n                </PaginationItem>\n            </PaginationContent>\n        </Pagination>\n    );\n};\n\nexport default PaginationFAQ;\n"],"names":["PaginationFAQ$1","currentPage","totalPages","onPageChange","jsx","Pagination","children","jsxs","PaginationContent","className","PaginationItem","jsxRuntimeExports","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Array","map","_","index","PaginationLink","isActive"],"mappings":"yFAiBO,MAiFPA,EAjF2D,EACvDC,cACAC,aACAC,kBAeKC,EAAAA,IAAAC,EAAA,CACGC,SAACC,EAAAA,KAAAC,EAAA,CAAkBC,UAAU,OACzBH,SAAA,OAACI,EACG,CAAAJ,SAAAK,EAAAP,IAAC,SAAA,CACGQ,QAjBQ,KACpBX,EAAc,GACdE,EAAaF,EAAc,EAC/B,EAegBQ,UAAW,wDAAuE,IAAhBR,EAAoB,iCAAmC,IACzH,aAAW,sBAEXK,SAAAK,EAAAJ,KAAC,MAAA,CACGM,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfZ,UAAU,iEAEVH,SAAA,CAAAF,MAAC,QAAKc,OAAO,OAAOI,EAAE,gBAAgBL,KAAK,WAC3Cb,IAAC,OAAK,CAAAkB,EAAE,0BAInB,IAAIC,MAAMrB,IAAasB,KAAI,CAACC,EAAGC,IAC5Bf,EAAAP,IAACM,EACG,CAAAJ,SAAAK,EAAAP,IAACuB,EAAA,CACGf,QAAS,IAAMT,EAAauB,EAAQ,GACpCE,SAAU3B,IAAgByB,EAAQ,EAClCjB,UAAW,oCAAmCR,IAAgByB,EAAQ,EAAI,kFAAoF,sCAE7JpB,SAAQoB,EAAA,KANIA,WAUxBhB,EACG,CAAAJ,SAAAK,EAAAP,IAAC,SAAA,CACGQ,QA7CI,KAChBX,EAAcC,GACdC,EAAaF,EAAc,EAC/B,EA2CgBQ,UAAW,wDAAuDR,IAAgBC,EAAa,iCAAmC,IAElII,SAAAK,EAAAJ,KAAC,MAAA,CACGM,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfZ,UAAU,kEAEVH,SAAA,CAAAF,MAAC,QAAKc,OAAO,OAAOI,EAAE,gBAAgBL,KAAK,WAC3Cb,IAAC,OAAK,CAAAkB,EAAE"}