{"version":3,"file":"CuUAaJRN.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/square-pen.js","../../../resources/js/Components/dashboard/tables/user-tables/cell-action.tsx","../../../node_modules/@radix-ui/react-checkbox/dist/index.mjs","../../../resources/js/Components/ui/checkbox.tsx","../../../resources/js/Components/dashboard/tables/user-tables/columns.tsx","../../../resources/js/Components/dashboard/tables/user-tables/client.tsx","../../../resources/js/Pages/Dashboard/user/Page.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.399.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst SquarePen = createLucideIcon(\"SquarePen\", [\n  [\"path\", { d: \"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\", key: \"1m0v6g\" }],\n  [\n    \"path\",\n    {\n      d: \"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z\",\n      key: \"ohrbg2\"\n    }\n  ]\n]);\n\nexport { SquarePen as default };\n//# sourceMappingURL=square-pen.js.map\n","\"use client\";\n\n// import { useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\n\nimport { Edit, MoreHorizontal, Trash } from \"lucide-react\";\n\nimport { AlertModal } from \"@/Components/dashboard/modal/alert-modal\";\nimport { Button } from \"@/Components/ui/button\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuTrigger,\n} from \"@/Components/ui/dropdown-menu\";\n\nimport { User } from \"@/lib/data/data\";\n\ninterface CellActionProps {\n    data: User;\n}\n\nexport const CellAction: React.FC<CellActionProps> = ({ data }) => {\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false);\n    // const router = useRouter();\n\n    const onConfirm = async () => {};\n\n    return (\n        <>\n            <AlertModal\n                isOpen={open}\n                onClose={() => setOpen(false)}\n                onConfirm={onConfirm}\n                loading={loading}\n            />\n            <DropdownMenu modal={false}>\n                <DropdownMenuTrigger asChild>\n                    <Button variant=\"ghost\" className=\"w-8 h-8 p-0\">\n                        <span className=\"sr-only\">Open menu</span>\n                        <MoreHorizontal className=\"w-4 h-4\" />\n                    </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                    <DropdownMenuLabel>Actions</DropdownMenuLabel>\n\n                    <DropdownMenuItem\n                    // onClick={() =>\n                    //     router.push(`/dashboard/user/${data.id}`)\n                    // }\n                    >\n                        <Edit className=\"w-4 h-4 mr-2\" /> Update\n                    </DropdownMenuItem>\n                    <DropdownMenuItem onClick={() => setOpen(true)}>\n                        <Trash className=\"w-4 h-4 mr-2\" /> Delete\n                    </DropdownMenuItem>\n                </DropdownMenuContent>\n            </DropdownMenu>\n        </>\n    );\n};\n","\"use client\";\n\n// packages/react/checkbox/src/Checkbox.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CHECKBOX_NAME = \"Checkbox\";\nvar [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\nvar [CheckboxProvider, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);\nvar Checkbox = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      ...checkboxProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? Boolean(button.closest(\"form\")) : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange\n    });\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form = button?.form;\n      if (form) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form.addEventListener(\"reset\", reset);\n        return () => form.removeEventListener(\"reset\", reset);\n      }\n    }, [button, setChecked]);\n    return /* @__PURE__ */ jsxs(CheckboxProvider, { scope: __scopeCheckbox, state: checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"checkbox\",\n          \"aria-checked\": isIndeterminate(checked) ? \"mixed\" : checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...checkboxProps,\n          ref: composedRefs,\n          onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === \"Enter\") event.preventDefault();\n          }),\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        BubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nCheckbox.displayName = CHECKBOX_NAME;\nvar INDICATOR_NAME = \"CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isIndeterminate(context.state) || context.state === true, children: /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.state),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...indicatorProps,\n        ref: forwardedRef,\n        style: { pointerEvents: \"none\", ...props.style }\n      }\n    ) });\n  }\n);\nCheckboxIndicator.displayName = INDICATOR_NAME;\nvar BubbleInput = (props) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n  React.useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, \"checked\");\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event(\"click\", { bubbles });\n      input.indeterminate = isIndeterminate(checked);\n      setChecked.call(input, isIndeterminate(checked) ? false : checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  return /* @__PURE__ */ jsx(\n    \"input\",\n    {\n      type: \"checkbox\",\n      \"aria-hidden\": true,\n      defaultChecked: isIndeterminate(checked) ? false : checked,\n      ...inputProps,\n      tabIndex: -1,\n      ref,\n      style: {\n        ...props.style,\n        ...controlSize,\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        opacity: 0,\n        margin: 0\n      }\n    }\n  );\n};\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction getState(checked) {\n  return isIndeterminate(checked) ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Checkbox;\nvar Indicator = CheckboxIndicator;\nexport {\n  Checkbox,\n  CheckboxIndicator,\n  Indicator,\n  Root,\n  createCheckboxScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Checkbox = React.forwardRef<\n    React.ElementRef<typeof CheckboxPrimitive.Root>,\n    React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n    <CheckboxPrimitive.Root\n        ref={ref}\n        className={cn(\n            \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n            className,\n        )}\n        {...props}\n    >\n        <CheckboxPrimitive.Indicator\n            className={cn(\"flex items-center justify-center text-current\")}\n        >\n            <CheckIcon className=\"w-4 h-4\" />\n        </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","\"use client\";\n\nimport { CellAction } from \"./cell-action\";\nimport { ColumnDef } from \"@tanstack/react-table\";\n\nimport { Checkbox } from \"@/Components/ui/checkbox\";\n\nimport { User } from \"@/lib/data/data\";\n\nexport const columns: ColumnDef<User>[] = [\n    {\n        id: \"select\",\n        header: ({ table }) => (\n            <Checkbox\n                checked={table.getIsAllPageRowsSelected()}\n                onCheckedChange={(value) =>\n                    table.toggleAllPageRowsSelected(!!value)\n                }\n                aria-label=\"Select all\"\n            />\n        ),\n        cell: ({ row }) => (\n            <Checkbox\n                checked={row.getIsSelected()}\n                onCheckedChange={(value) => row.toggleSelected(!!value)}\n                aria-label=\"Select row\"\n            />\n        ),\n        enableSorting: false,\n        enableHiding: false,\n    },\n    {\n        accessorKey: \"name\",\n        header: \"NAME\",\n    },\n    {\n        accessorKey: \"company\",\n        header: \"COMPANY\",\n    },\n    {\n        accessorKey: \"role\",\n        header: \"ROLE\",\n    },\n    {\n        accessorKey: \"status\",\n        header: \"STATUS\",\n    },\n    {\n        id: \"actions\",\n        cell: ({ row }) => <CellAction data={row.original} />,\n    },\n];\n","\"use client\";\n\nimport { columns } from \"./columns\";\n\n// import { useRouter } from \"next/navigation\";\nimport { Plus } from \"lucide-react\";\n\nimport { Button } from \"@/Components/ui/button\";\nimport { DataTable } from \"@/Components/ui/data-table\";\nimport { Heading } from \"@/Components/ui/heading\";\nimport { Separator } from \"@/Components/ui/separator\";\n\nimport { User } from \"@/lib/data/data\";\n\ninterface ProductsClientProps {\n    data: User[];\n}\n\nexport const UserClient: React.FC<ProductsClientProps> = ({ data }) => {\n    // const router = useRouter();\n\n    return (\n        <>\n            <div className=\"flex items-start justify-between\">\n                <Heading\n                    title={`Users (${data.length})`}\n                    description=\"Manage users (Client side table functionalities.)\"\n                />\n                <Button\n                    className=\"md:text-sm text-xs\"\n                    // onClick={() => router.push(`/dashboard/user/new`)}\n                >\n                    <Plus className=\"w-4 h-4 mr-2\" /> Add New\n                </Button>\n            </div>\n            <Separator />\n            <DataTable searchKey=\"name\" columns={columns} data={data} />\n        </>\n    );\n};\n","import DashboardLayout from \"@/Layouts/DashboardLayout\";\n\nimport { UserClient } from \"@/Components/dashboard/tables/user-tables/client\";\nimport { Breadcrumbs } from \"@/Components/ui/breadcrumbs\";\n\nimport { users } from \"@/lib/data/data\";\n\nconst breadcrumbItems = [\n    { title: \"Dashboard\", link: \"/dashboard\" },\n    { title: \"User\", link: \"/dashboard/user\" },\n];\nexport default function Page({ auth, response }) {\n    console.log(response);\n    return (\n        <DashboardLayout user={auth.user}>\n            <Breadcrumbs items={breadcrumbItems} />\n            <UserClient data={response} />\n        </DashboardLayout>\n    );\n}\n"],"names":["SquarePen","createLucideIcon","d","key","CellAction","data","loading","setLoading","useState","open","setOpen","jsxRuntimeExports","jsxs","Fragment","children","jsx","AlertModal","isOpen","onClose","onConfirm","async","DropdownMenu","modal","DropdownMenuTrigger","asChild","Button","variant","className","MoreHorizontal","DropdownMenuContent","align","DropdownMenuLabel","DropdownMenuItem","Edit","onClick","Trash","CHECKBOX_NAME","createCheckboxContext","createCheckboxScope","createContextScope","CheckboxProvider","useCheckboxContext","Checkbox","React.forwardRef","forwardRef","props","forwardedRef","__scopeCheckbox","name","checked","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","checkboxProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","Boolean","closest","setChecked","useControllableState","prop","defaultProp","onChange","initialCheckedStateRef","React.useEffect","form","reset","current","addEventListener","removeEventListener","scope","state","Primitive","type","role","isIndeterminate","getState","ref","onKeyDown","composeEventHandlers","event","preventDefault","prevChecked","isPropagationStopped","stopPropagation","BubbleInput","control","bubbles","style","transform","displayName","INDICATOR_NAME","CheckboxIndicator","forceMount","indicatorProps","context","Presence","present","span","pointerEvents","inputProps","usePrevious","controlSize","useSize","input","inputProto","window","HTMLInputElement","prototype","Object","getOwnPropertyDescriptor","set","Event","indeterminate","call","dispatchEvent","tabIndex","position","opacity","margin","Root","Indicator","CheckboxPrimitive.Root","cn","CheckboxPrimitive.Indicator","CheckIcon","columns","id","header","table","getIsAllPageRowsSelected","toggleAllPageRowsSelected","cell","row","getIsSelected","toggleSelected","enableSorting","enableHiding","accessorKey","original","UserClient","Heading","title","length","description","Plus","Separator","DataTable","searchKey","breadcrumbItems","link","Page","auth","response","console","log","DashboardLayout","user","Breadcrumbs","items"],"mappings":"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","x_google_ignoreList":[0,2]}