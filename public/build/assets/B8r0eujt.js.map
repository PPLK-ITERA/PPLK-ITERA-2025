{"version":3,"file":"B8r0eujt.js","sources":["../../../resources/js/Components/dashboard/create-user/CreateUser.tsx","../../../resources/js/Pages/Dashboard/create-user/Page.tsx"],"sourcesContent":["import { DetailUser } from \"@/Pages/Dashboard/detail-user/Page\";\nimport { CaretSortIcon, CheckIcon } from \"@radix-ui/react-icons\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useForm } from \"@inertiajs/react\";\n\nimport { Button } from \"@/Components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n} from \"@/Components/ui/command\";\nimport { Input } from \"@/Components/ui/input\";\nimport { Label } from \"@/Components/ui/label\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/Components/ui/popover\";\nimport { ScrollArea, ScrollBar } from \"@/Components/ui/scroll-area\";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/Components/ui/select\";\n\nimport { PRODI_DATA } from \"@/lib/data/programStudi\";\nimport { cn } from \"@/lib/utils\";\n\ninterface kelompokData {\n  id: number;\n  nama_kelompok: string;\n  no_kelompok: number;\n}\n\nexport default function CreateUser() {\n  const { data, setData, post } = useForm({\n    name: \"\",\n    kelompok_id: 0,\n    prodi_id: 0,\n    role_id: 0,\n  });\n\n  const [openProdi, setOpenProdi] = useState(false);\n  const [openKelompok, setOpenKelompok] = useState(false);\n  const [prodiValue, setProdiValue] = useState(\"\");\n  const [kelompokValue, setKelompokValue] = useState(\"\");\n  const [kelompokData, setKelompokData] = useState<kelompokData[]>([]);\n\n  const [selectedRole, setSelectedRole] = useState(\"\"); // State untuk menyimpan hari yang dipilih\n\n  const handleChangeRole = (value: string) => {\n    setSelectedRole(value); // Update state ketika pengguna memilih hari\n\n    setData(\"role_id\", parseInt(value));\n  };\n\n  const handleCreateUser = () => {\n    post(route(\"dashboard.user.store\"));\n  };\n\n  const getProdiData = async () => {\n    const response = await fetch(route(\"dashboard.user.data.kelompok\"), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const data = await response.json();\n    setKelompokData(data);\n    //console.log(data);\n  };\n\n  useEffect(() => {\n    getProdiData();\n  }, []);\n\n  return (\n    <div className=\"h-fit font-inter flex-1 w-full p-4 space-y-5 rounded-xl shadow-md bg-[linear-gradient(137.47deg,_#E06C32_11.08%,_#FD8E57_42.04%,_#BE3F00_95.9%)]\">\n      <h2 className=\"text-xl font-semibold text-white tracking-tight\">Form Data User</h2>\n\n      <div className=\"flex flex-col\">\n        <Label htmlFor=\"nama-maba\" className=\"text-left text-white\">\n          Nama\n        </Label>\n\n        <Input\n          type=\"text\"\n          id=\"nama-maba\"\n          value={data.name}\n          onChange={(e) => setData(\"name\", e.target.value)}\n          placeholder=\"Chandra Budi Wijaya\"\n          className=\"mt-1\"\n        />\n      </div>\n\n      <div className=\"flex flex-col\">\n        <Label htmlFor=\"kelompok\" className=\"text-left text-white\">\n          Kelompok\n        </Label>\n\n        <Popover open={openKelompok} onOpenChange={setOpenKelompok}>\n          <PopoverTrigger asChild>\n            <Button\n              variant=\"outline\"\n              role=\"combobox\"\n              aria-expanded={openKelompok}\n              className=\"justify-between w-full mt-1 font-normal\"\n            >\n              {kelompokValue\n                ? kelompokData.find(\n                    (kelompok) => JSON.stringify(kelompok.id) === kelompokValue,\n                  )?.id\n                : `Pilih Kelompok`}\n              <CaretSortIcon className=\"shrink-0 w-4 h-4 ml-2 opacity-50\" />\n            </Button>\n          </PopoverTrigger>\n\n          <PopoverContent>\n            <Command>\n              <CommandInput placeholder=\"Cari Kelompok...\" className=\"h-9\" />\n              <CommandEmpty>Data kelompok tidak ada.</CommandEmpty>\n              <CommandGroup>\n                <ScrollArea className=\"h-[calc(50vh-64px)]\">\n                  {kelompokData.length > 0\n                    ? kelompokData.map((kelompok, index) => (\n                        <CommandItem\n                          key={index}\n                          value={JSON.stringify(kelompok.id)}\n                          onSelect={(currentValue) => {\n                            setKelompokValue(\n                              currentValue === kelompokValue\n                                ? \"\"\n                                : currentValue,\n                            );\n                            setData(\"kelompok_id\", kelompok.id);\n                            setOpenKelompok(false);\n                          }}\n                        >\n                          {kelompok.nama_kelompok}\n                          <CheckIcon\n                            className={cn(\n                              \"ml-auto h-4 w-4\",\n                              kelompokValue === JSON.stringify(kelompok.id)\n                                ? \"opacity-100\"\n                                : \"opacity-0\",\n                            )}\n                          />\n                        </CommandItem>\n                      ))\n                    : null}\n                  <ScrollBar orientation=\"vertical\" />\n                </ScrollArea>\n              </CommandGroup>\n            </Command>\n          </PopoverContent>\n        </Popover>\n      </div>\n\n      <div className=\"flex flex-col\">\n        <Label htmlFor=\"prodi-maba\" className=\"text-left text-white\">\n          Prodi\n        </Label>\n\n        <Popover open={openProdi} onOpenChange={setOpenProdi}>\n          <PopoverTrigger asChild>\n            <Button\n              variant=\"outline\"\n              role=\"combobox\"\n              aria-expanded={openProdi}\n              className=\"justify-between w-full mt-1 font-normal\"\n            >\n              {prodiValue\n                ? PRODI_DATA.find((prodi) => prodi.value === prodiValue)?.label\n                : `Pilih Prodi`}\n              <CaretSortIcon className=\"shrink-0 w-4 h-4 ml-2 opacity-50\" />\n            </Button>\n          </PopoverTrigger>\n\n          <PopoverContent>\n            <Command>\n              <CommandInput placeholder=\"Cari Prodi...\" className=\"h-9\" />\n              <CommandEmpty>Data prodi tidak ada.</CommandEmpty>\n              <CommandGroup>\n                <ScrollArea className=\"h-[calc(50vh-64px)]\">\n                  {PRODI_DATA.map((prodi) => (\n                    <CommandItem\n                      key={prodi.value}\n                      value={prodi.value}\n                      onSelect={(currentValue) => {\n                        setProdiValue(\n                          currentValue === prodiValue ? \"\" : currentValue,\n                        );\n                        setData(\"prodi_id\", prodi.id);\n                        setOpenProdi(false);\n                      }}\n                    >\n                      {prodi.label}\n                      <CheckIcon\n                        className={cn(\n                          \"ml-auto h-4 w-4\",\n                          prodiValue === prodi.value\n                            ? \"opacity-100\"\n                            : \"opacity-0\",\n                        )}\n                      />\n                    </CommandItem>\n                  ))}\n                  <ScrollBar orientation=\"vertical\" />\n                </ScrollArea>\n              </CommandGroup>\n            </Command>\n          </PopoverContent>\n        </Popover>\n      </div>\n\n      <div className=\"flex flex-col\">\n        <Label htmlFor=\"role\" className=\"text-left text-white\">\n          Role\n        </Label>\n\n        <Select onValueChange={handleChangeRole} defaultValue={selectedRole}>\n          <SelectTrigger className=\"w-full justify-between w-full mt-1 font-normal bg-white\">\n            <SelectValue placeholder=\"Pilih Role\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectGroup>\n              <SelectLabel>Opsi Role</SelectLabel>\n\n              <SelectItem value=\"1\">Maba</SelectItem>\n              <SelectItem value=\"2\">Daplok</SelectItem>\n              <SelectItem value=\"4\">Mentor</SelectItem>\n              <SelectItem value=\"5\">Pjprodi</SelectItem>\n              <SelectItem value=\"6\">Korlap</SelectItem>\n              <SelectItem value=\"7\">Mamet</SelectItem>\n              <SelectItem value=\"8\">CustomerService</SelectItem>\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"flex justify-end\">\n        <Button onClick={handleCreateUser}>Tambah Data</Button>\n      </div>\n    </div>\n  );\n}\n","import { PageProps } from \"vendor/laravel/breeze/stubs/inertia-react-ts/resources/js/types\";\n\nimport { useEffect } from \"react\";\n\nimport { usePage, Head } from \"@inertiajs/react\";\n\nimport DashboardLayout from \"@/Layouts/DashboardLayout\";\n\nimport CreateUser from \"@/Components/dashboard/create-user/CreateUser\";\nimport { Breadcrumbs } from \"@/Components/ui/breadcrumbs\";\nimport { Toaster } from \"@/Components/ui/toaster\";\nimport { useToast } from \"@/Components/ui/use-toast\";\n\nimport { useFlashToast } from \"@/lib/hooks/useFlashToast\";\n\nconst breadcrumbItems = [\n  { title: \"Ellysion Panel\", link: \"/dashboard\" },\n  { title: \"Create User\", link: \"/dashboard/create-user\" },\n];\n\nexport default function Page({ auth }) {\n  useFlashToast();\n\n  return (\n    <>\n      <Head title=\"Tambah User\"/>\n      <DashboardLayout user={auth.user}>\n        <Breadcrumbs items={breadcrumbItems} />\n\n        <h2 className=\"text-3xl font-semibold font-inter tracking-tight\">Create User</h2>\n\n        <div className=\"md:pb-20 max-w-sm pb-64\">\n          <CreateUser />\n        </div>\n      </DashboardLayout>\n\n      <Toaster />\n    </>\n  );\n}\n"],"names":["CreateUser","data","setData","post","useForm","name","kelompok_id","prodi_id","role_id","openProdi","setOpenProdi","useState","openKelompok","setOpenKelompok","prodiValue","setProdiValue","kelompokValue","setKelompokValue","kelompokData","setKelompokData","selectedRole","setSelectedRole","useEffect","async","response","fetch","route","method","headers","Accept","json","getProdiData","jsxs","className","children","jsx","Label","htmlFor","Input","type","id","value","onChange","e","target","placeholder","Popover","open","onOpenChange","PopoverTrigger","asChild","Button","variant","role","_a","find","kelompok","JSON","stringify","CaretSortIcon","PopoverContent","Command","CommandInput","CommandEmpty","CommandGroup","ScrollArea","length","map","index","CommandItem","onSelect","currentValue","nama_kelompok","CheckIcon","cn","ScrollBar","orientation","_b","PRODI_DATA","prodi","label","Select","onValueChange","parseInt","defaultValue","SelectTrigger","SelectValue","SelectContent","SelectGroup","SelectLabel","SelectItem","onClick","breadcrumbItems","title","link","Page","auth","useFlashToast","Fragment","Head","DashboardLayout","user","Breadcrumbs","items","Toaster"],"mappings":"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"}