{"version":3,"file":"DT787ph7.js","sources":["../../../resources/js/Components/tables/pengumpulan-tugas/cell-action.tsx","../../../resources/js/Components/tables/pengumpulan-tugas/columns.tsx","../../../resources/js/Components/tables/pengumpulan-tugas/client.tsx","../../../resources/js/Pages/Dashboard/pengumpulan-tugas/Page.tsx"],"sourcesContent":["\"use client\";\n\n// import { useRouter } from \"next/navigation\";\nimport { TaskEntry } from \"./columns\";\n\nimport { useState } from \"react\";\n\nimport { Link } from \"@inertiajs/react\";\n\nimport { Edit, MoreHorizontal, Trash } from \"lucide-react\";\n\nimport { AlertModal } from \"@/Components/dashboard/modal/alert-modal\";\nimport { Button, buttonVariants } from \"@/Components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuTrigger,\n} from \"@/Components/ui/dropdown-menu\";\n\nimport { User } from \"@/lib/data/data\";\nimport { UserMaba } from \"@/lib/types/User\";\n\ninterface CellActionProps {\n  data: TaskEntry;\n}\n\nexport const CellAction: React.FC<CellActionProps> = ({ data }) => {\n  return (\n    <>\n      <div className=\"flex gap-1 p-2\">\n        <a\n          href={`${data.tugas.jawaban ?? \"#\"}`}\n          className={`${buttonVariants({ size: \"sm\" })}`}\n        >\n          Lihat Tugas\n        </a>\n      </div>\n    </>\n  );\n};\n","\"use client\";\n\nimport { CellAction } from \"./cell-action\";\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { format } from \"date-fns\";\nimport QRCode from \"react-qr-code\";\n\nimport { UserMaba } from \"@/lib/types/User\";\n\n// Define the type for the user information\ninterface User {\n  name: string;\n  nim: null | string; // 'null' or a string if NIM is present\n  nama_kelompok: string;\n}\n\n// Define the type for the task (tugas) information\ninterface Tugas {\n  judul: string;\n  jawaban: string; // Assuming 'jawaban' will always be a URL as a string\n  isReturn: number; // Assuming 'isReturn' is an integer (0 or 1)\n  catatan: null | string; // 'null' or a string if a note is present\n}\n\n// Define the type for the entire structure\nexport interface TaskEntry {\n  id: number;\n  user: User;\n  tugas: Tugas;\n  status: string; // Could also be more specific, like 'submitted' | 'not_submitted' | 'submitted late' if those are the only possible statuses\n}\n\nexport const columns: ColumnDef<TaskEntry>[] = [\n  {\n    id: \"no\",\n    header: \"No\",\n    cell: ({ row }) => row.index + 1,\n  },\n  {\n    id: \"name\",\n    accessorKey: \"user.name\",\n    header: \"Nama\",\n    cell: ({ row }) => row.original.user.name,\n  },\n  {\n    id: \"nim\",\n    accessorKey: \"user.nim\",\n    header: \"NIM\",\n    cell: ({ row }) => row.original.user.nim,\n  },\n  {\n    id: \"judul\",\n    accessorKey: \"tugas.judul\",\n    header: \"Nama Tugas\",\n    cell: ({ row }) => row.original.tugas.judul,\n  },\n  {\n    id: \"nama_kelompok\",\n    accessorKey: \"user.nama_kelompok\",\n    header: \"Kelompok\",\n    cell: ({ row }) => row.original.user.nama_kelompok,\n  },\n  {\n    id: \"status\",\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => row.original.status,\n  },\n  {\n    id: \"actions\",\n    header: \"Aksi\",\n    cell: ({ row }) => <CellAction data={row.original} />,\n  },\n];\n","\"use client\";\n\nimport { columns } from \"./columns\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { Button } from \"@/Components/ui/button\";\nimport { DataTable } from \"@/Components/ui/data-table\";\nimport { Separator } from \"@/Components/ui/separator\";\n\ninterface PengumpulanTugasClientProps {\n  tugas_id: number;\n  no_kelompok: number;\n  status: number;\n}\n\nexport const PengumpulanTugasClient = ({\n  tugas_id,\n  no_kelompok,\n  status,\n}: PengumpulanTugasClientProps) => {\n  const [requestParams, setRequestParams] = useState({\n    status: status ? status : null,\n    no_kelompok: no_kelompok ? no_kelompok : null,\n    tugas_id: tugas_id,\n  });\n\n  // Function to fetch data based on requestParams\n  const fetchTableData = async () => {\n    // Construct API endpoint dynamically based on current state\n\n    const apiEndpoint = route(\"dashboard.tugas.data\", {\n      no_kelompok: requestParams.no_kelompok ?? 0,\n      status: requestParams.status ?? 0,\n      tugas_id: requestParams.tugas_id,\n    });\n\n    // ..../data/alll/2?status=1&no_kelompok=1\n\n    console.log(\"Fetching data for:\", apiEndpoint);\n    // You would typically fetch data here using the updated apiEndpoint\n  };\n\n  // Call fetchTableData only when parameters change and are not null\n  useEffect(() => {\n    if (\n      requestParams.no_kelompok ||\n      requestParams.status ||\n      requestParams.tugas_id\n    ) {\n      fetchTableData();\n    }\n  }, [requestParams]);\n\n  const handleApplyClick = () => {\n    setRequestParams({\n      tugas_id: tugas_id,\n      no_kelompok: no_kelompok ? no_kelompok : null,\n      status: status ? status : null,\n    });\n  }; // Dependency on requestParams to re-fetch when it changes\n\n  const handleResetFilter = () => {\n    window.location.reload();\n  }; // Dependency on requestParams to re-fetch when it changes\n\n  return (\n    <>\n      <div className=\"flex gap-2\">\n        <Button onClick={handleApplyClick}>Terapkan</Button>\n        <Button onClick={handleResetFilter} variant={\"outline\"}>\n          Reset Filter\n        </Button>\n      </div>\n\n      <Separator />\n      <DataTable\n        searchKey=\"Nama, Nim, Email\"\n        columns={columns}\n        apiEndpoint={route(\"dashboard.tugas.data\", {\n          tugas_id: requestParams.tugas_id,\n          no_kelompok: requestParams.no_kelompok ?? 0,\n          status: requestParams.status ?? 0,\n        })}\n        title=\"Data Pengumpulan Tugas\"\n        description=\"Gunakan sistem informasi ini untuk melihat data pengumpulan tugas mahasiswa baru!\"\n        // status={status}\n      />\n    </>\n  );\n};\n","import { CaretSortIcon } from \"@radix-ui/react-icons\";\nimport { Scrollbar } from \"@radix-ui/react-scroll-area\";\nimport { ColumnDef } from \"@tanstack/react-table\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { CheckIcon } from \"lucide-react\";\n\nimport { IconPlus } from \"@tabler/icons-react\";\n\nimport DashboardLayout from \"@/Layouts/DashboardLayout\";\n\nimport { MateriCellActions } from \"@/Components/dashboard/materi/MateriCellActions\";\nimport MateriForm from \"@/Components/dashboard/materi/MateriForm\";\nimport { PengumpulanTugasClient } from \"@/Components/tables/pengumpulan-tugas/client\";\nimport { Breadcrumbs } from \"@/Components/ui/breadcrumbs\";\nimport { Button } from \"@/Components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n} from \"@/Components/ui/command\";\nimport { DataTable } from \"@/Components/ui/data-table\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/Components/ui/dialog\";\nimport { Label } from \"@/Components/ui/label\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/Components/ui/popover\";\nimport { ScrollArea, ScrollBar } from \"@/Components/ui/scroll-area\";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/Components/ui/select\";\nimport { Toaster } from \"@/Components/ui/toaster\";\n\nimport { useFlashToast } from \"@/lib/hooks/useFlashToast\";\nimport { Materi } from \"@/lib/types/Materi\";\nimport { cn } from \"@/lib/utils\";\n\nconst breadcrumbItems = [\n  { title: \"Dashboard\", link: \"/dashboard\" },\n  { title: \"Pengumpulan Tugas\", link: \"/dashboard/pengumpulan-tugas\" },\n];\n\nconst ListDataTugas = [\n  { id: 1, label: \"DIRETRA\", value: \"1\" },\n  { id: 2, label: \"HARTATERA\", value: \"2\" },\n  { id: 3, label: \"COOLIN\", value: \"3\" },\n  { id: 4, label: \"GARTA MATERA\", value: \"4\" },\n  { id: 5, label: \"PORTAL DILOGI\", value: \"5\" },\n  { id: 6, label: \"REKASITERA\", value: \"6\" },\n  { id: 7, label: \"MOTLET CAKRAWALA\", value: \"7\" },\n];\n\ninterface kelompokData {\n  id: number;\n  nama_kelompok: string;\n  no_kelompok: string;\n}\n\nexport default function Page({ auth, response }) {\n  useFlashToast();\n\n  const [openKelompok, setOpenKelompok] = useState(false);\n  const [kelompokValue, setKelompokValue] = useState(\"\");\n  const [selectedTask, setSelectedTask] = useState(\"1\"); // State for storing the selected task\n  const [selectedTaskId, setSelectedTaskId] = useState(1); // State for storing the selected task id\n  const [submissionStatus, setSubmissionStatus] = useState(\"\"); // State for storing the submission status\n\n  const [kelompokData, setKelompokData] = useState<kelompokData[]>([]);\n\n  const getKelompokData = async () => {\n    const response = await fetch(route(\"dashboard.user.data.kelompok\"), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n\n    const data = await response.json();\n    setKelompokData(data);\n  };\n\n  useEffect(() => {\n    getKelompokData();\n  }, []);\n\n  // Handlers for selections\n  const handleTaskSelection = (value) => {\n    setSelectedTask(value); // Update state when a user selects a task\n    setSelectedTaskId(value);\n  };\n\n  const handleSubmissionStatusChange = (status) => {\n    setSubmissionStatus(status); // Update state when a user selects a submission status\n  };\n\n  return (\n    <>\n      <DashboardLayout user={auth.user}>\n        <Breadcrumbs items={breadcrumbItems} />\n        <h2 className=\"text-3xl font-bold tracking-tight\">Pengumpulan Tugas</h2>\n\n        <h2>Filter berdasarkan...</h2>\n        <div className=\"md:flex-row md:items-center flex flex-col items-start gap-1\">\n          <div className=\"grow w-full\">\n            <Label className=\"ml-[1px]\">Nama Tugas</Label>\n\n            <Select\n              onValueChange={handleTaskSelection}\n              defaultValue={selectedTask}\n            >\n              <SelectTrigger className=\"w-full font-bold\">\n                <SelectValue placeholder=\"Pilih nama tugas\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectGroup>\n                  <SelectLabel>Nama Tugas</SelectLabel>\n                  {ListDataTugas.map((item) => (\n                    <SelectItem key={item.id} value={item.value}>\n                      {item.label}\n                    </SelectItem>\n                  ))}\n                </SelectGroup>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"grow w-full\">\n            <Label className=\"ml-[1px]\">Nama Kelompok</Label>\n\n            <Popover open={openKelompok} onOpenChange={setOpenKelompok}>\n              <PopoverTrigger asChild>\n                <Button\n                  variant=\"outline\"\n                  role=\"combobox\"\n                  aria-expanded={openKelompok}\n                  className=\"justify-between w-full font-normal shadow-none\"\n                  size={\"sm\"}\n                >\n                  {kelompokValue\n                    ? kelompokData.find(\n                        (kelompok) =>\n                          JSON.stringify(kelompok.id) === kelompokValue,\n                      )?.id\n                    : `Pilih Kelompok`}\n                  <CaretSortIcon className=\"shrink-0 w-4 h-4 ml-2 opacity-50\" />\n                </Button>\n              </PopoverTrigger>\n\n              <PopoverContent>\n                <Command>\n                  <CommandInput\n                    placeholder=\"Cari Kelompok...\"\n                    className=\"h-9\"\n                  />\n                  <CommandEmpty>Data kelompok tidak ada.</CommandEmpty>\n                  <CommandGroup>\n                    <ScrollArea className=\"h-[calc(50vh-64px)]\">\n                      {kelompokData.length > 0\n                        ? kelompokData.map((kelompok, index) => (\n                            <CommandItem\n                              key={index}\n                              value={JSON.stringify(kelompok.id)}\n                              onSelect={(currentValue) => {\n                                setKelompokValue(\n                                  currentValue === kelompokValue\n                                    ? \"\"\n                                    : currentValue,\n                                );\n                                setOpenKelompok(false);\n                              }}\n                            >\n                              {kelompok.no_kelompok}-{kelompok.nama_kelompok}\n                              <CheckIcon\n                                className={cn(\n                                  \"ml-auto h-4 w-4\",\n                                  kelompokValue === JSON.stringify(kelompok.id)\n                                    ? \"opacity-100\"\n                                    : \"opacity-0\",\n                                )}\n                              />\n                            </CommandItem>\n                          ))\n                        : null}\n                      <ScrollBar orientation=\"vertical\" />\n                    </ScrollArea>\n                  </CommandGroup>\n                </Command>\n              </PopoverContent>\n            </Popover>\n          </div>\n\n          <div className=\"grow w-full\">\n            <Label className=\"ml-[1px]\">Status Pengumpulan</Label>\n\n            <Select\n              onValueChange={handleSubmissionStatusChange}\n              defaultValue={submissionStatus}\n            >\n              <SelectTrigger className=\"w-full font-bold\">\n                <SelectValue placeholder=\"Pilih status pengumpulan\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectGroup>\n                  <SelectLabel>Status Pengumpulan</SelectLabel>\n                  <SelectItem value=\"1\">Sudah Mengumpulkan</SelectItem>\n                  <SelectItem value=\"2\">Telat Mengumpulkan</SelectItem>\n                  <SelectItem value=\"3\">Dikembalikan</SelectItem>\n                  <SelectItem value=\"4\">Belum Mengumpulkan</SelectItem>\n                </SelectGroup>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n\n        <PengumpulanTugasClient\n          tugas_id={selectedTaskId}\n          no_kelompok={parseInt(kelompokValue)}\n          status={parseInt(submissionStatus)}\n        />\n      </DashboardLayout>\n\n      <Toaster />\n    </>\n  );\n}\n"],"names":["CellAction","data","jsxRuntimeExports","jsx","Fragment","children","className","href","tugas","jawaban","buttonVariants","size","columns","id","header","cell","row","index","accessorKey","original","user","name","nim","judul","nama_kelompok","status","PengumpulanTugasClient","tugas_id","no_kelompok","requestParams","setRequestParams","useState","useEffect","async","apiEndpoint","route","console","log","jsxs","Button","onClick","window","location","reload","variant","Separator","DataTable","searchKey","title","description","breadcrumbItems","link","ListDataTugas","label","value","Page","auth","response","openKelompok","setOpenKelompok","kelompokValue","setKelompokValue","selectedTask","setSelectedTask","selectedTaskId","setSelectedTaskId","submissionStatus","setSubmissionStatus","kelompokData","setKelompokData","fetch","method","headers","Accept","json","DashboardLayout","Breadcrumbs","items","Label","Select","onValueChange","defaultValue","SelectTrigger","SelectValue","placeholder","SelectContent","SelectGroup","SelectLabel","map","item","SelectItem","Popover","open","onOpenChange","PopoverTrigger","asChild","role","_a","find","kelompok","JSON","stringify","CaretSortIcon","PopoverContent","Command","CommandInput","CommandEmpty","CommandGroup","ScrollArea","length","CommandItem","onSelect","currentValue","CheckIcon","cn","ScrollBar","orientation","parseInt","Toaster"],"mappings":"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"}