{"version":3,"file":"CblOtXxR.js","sources":["../../../resources/js/Components/ui/modal.tsx","../../../resources/js/Components/dashboard/modal/alert-modal.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n    Dialog,\n    DialogContent,\n    DialogDescription,\n    DialogHeader,\n    DialogTitle,\n} from \"@/Components/ui/dialog\";\n\ninterface ModalProps {\n    title: string;\n    description: string;\n    isOpen: boolean;\n    onClose: () => void;\n    children?: React.ReactNode;\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n    title,\n    description,\n    isOpen,\n    onClose,\n    children,\n}) => {\n    const onChange = (open: boolean) => {\n        if (!open) {\n            onClose();\n        }\n    };\n\n    return (\n        <Dialog open={isOpen} onOpenChange={onChange}>\n            <DialogContent>\n                <DialogHeader>\n                    <DialogTitle>{title}</DialogTitle>\n                    <DialogDescription>{description}</DialogDescription>\n                </DialogHeader>\n                <div>{children}</div>\n            </DialogContent>\n        </Dialog>\n    );\n};\n","\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { Button } from \"@/Components/ui/button\";\nimport { Modal } from \"@/Components/ui/modal\";\n\ninterface AlertModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onConfirm: () => void;\n    loading: boolean;\n}\n\nexport const AlertModal: React.FC<AlertModalProps> = ({\n    isOpen,\n    onClose,\n    onConfirm,\n    loading,\n}) => {\n    const [isMounted, setIsMounted] = useState(false);\n\n    useEffect(() => {\n        setIsMounted(true);\n    }, []);\n\n    if (!isMounted) {\n        return null;\n    }\n\n    return (\n        <Modal\n            title=\"Are you sure?\"\n            description=\"This action cannot be undone.\"\n            isOpen={isOpen}\n            onClose={onClose}\n        >\n            <div className=\"flex items-center justify-end w-full pt-6 space-x-2\">\n                <Button disabled={loading} variant=\"outline\" onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button\n                    disabled={loading}\n                    variant=\"destructive\"\n                    onClick={onConfirm}\n                >\n                    Continue\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n"],"names":["Modal","title","description","isOpen","onClose","children","Dialog","open","onOpenChange","DialogContent","DialogHeader","jsx","DialogTitle","DialogDescription","AlertModal","onConfirm","loading","isMounted","setIsMounted","useState","useEffect","jsxRuntimeExports","jsxs","className","Button","disabled","variant","onClick"],"mappings":"yIAkBO,MAAMA,EAA8B,EACvCC,QACAC,cACAC,SACAC,UACAC,oBASKC,EAAO,CAAAC,KAAMJ,EAAQK,aAPRD,IACTA,MAEL,EAKIF,gBAACI,EACG,CAAAJ,SAAA,QAACK,EACG,CAAAL,SAAA,GAAAM,IAACC,GAAaP,SAAMJ,MACpBU,IAACE,GAAmBR,SAAYH,aAEnC,OAAKG,kBCxBTS,EAAwC,EACjDX,SACAC,UACAW,YACAC,cAEA,MAAOC,EAAWC,GAAgBC,YAAS,GAM3C,OAJAC,EAAAA,WAAU,KACNF,GAAa,EAAI,GAClB,IAEED,EAKDI,EAAAV,IAACX,EAAA,CACGC,MAAM,gBACNC,YAAY,gCACZC,SACAC,UAEAC,SAAAgB,EAAAC,KAAC,MAAI,CAAAC,UAAU,sDACXlB,SAAA,CAAAM,EAAAA,IAACa,GAAOC,SAAUT,EAASU,QAAQ,UAAUC,QAASvB,EAASC,SAE/D,WACAgB,EAAAV,IAACa,EAAA,CACGC,SAAUT,EACVU,QAAQ,cACRC,QAASZ,EACZV,SAAA,kBAlBF,IAqBH"}