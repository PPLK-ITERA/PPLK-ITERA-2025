{"version":3,"file":"DO-u6S1h.js","sources":["../../../resources/js/Components/dashboard/mading/DetailTugasUser.tsx","../../../resources/js/Pages/Dashboard/mading/user/Page.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\n\nimport { Link, useForm } from \"@inertiajs/react\";\n\nimport { Button } from \"@/Components/ui/button\";\nimport {\n    Dialog,\n    DialogClose,\n    DialogContent,\n    DialogDescription,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle,\n    DialogTrigger,\n} from \"@/Components/ui/dialog\";\nimport { Label } from \"@/Components/ui/label\";\nimport { ScrollArea, ScrollBar } from \"@/Components/ui/scroll-area\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from \"@/Components/ui/table\";\nimport { Textarea } from \"@/Components/ui/textarea\";\n\ninterface TaskSubmission {\n    id: number;\n    user_id: number;\n    tugas_id: number;\n    jawaban: string;\n    nama: string;\n    isReturn: number;\n    tanggal_submit: string;\n    nama_tugas: string;\n    catatan: string | null;\n}\n\n// Optionally, you can use an array type for multiple submissions\ntype TaskSubmissions = TaskSubmission[];\n\ninterface TugasKelompokProps {\n    id: number;\n}\n\nconst DetailTugasUser: FC<TugasKelompokProps> = ({ id }) => {\n    const [loading, setLoading] = useState<boolean>(true);\n    const [tugas, setTugas] = useState<TaskSubmissions>([]);\n    const [nama, setNama] = useState<string>(\"\");\n\n    const getTugasUser = async () => {\n        setLoading(true);\n\n        const response = await fetch(route(\"dashboard.tugas.data.user\", id), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch data\");\n        }\n\n        const data = await response.json();\n\n        setTugas(data.response.data);\n        setNama(data.nama);\n\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        getTugasUser();\n    }, []);\n\n    const { data, setData, put } = useForm({\n        id: 0,\n        catatan: \"\",\n        _method: \"put\",\n    });\n\n    const handleKembalikanTugas = () => {\n        put(route(\"dashboard.tugas.return\"));\n    };\n\n    return (\n        <>\n            <h2 className=\"text-3xl font-bold tracking-tight\">\n                Detail Tugas {nama}\n            </h2>\n\n            <ScrollArea className=\"whitespace-nowrap max-w-7xl mt-5 overflow-hidden rounded-md\">\n                <Table className=\"relative border\">\n                    <TableHeader>\n                        <TableRow className=\"hover:bg-current bg-current\">\n                            <TableHead className=\"w-[50px] text-white\">\n                                No\n                            </TableHead>\n                            <TableHead className=\"text-white w-[200px]\">\n                                Nama Tugas\n                            </TableHead>\n                            <TableHead className=\"text-white w-[400px]\">\n                                Link\n                            </TableHead>\n                            <TableHead className=\"text-white\">\n                                Status Pengembalian\n                            </TableHead>\n                            <TableHead className=\"text-white\">Aksi</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody className=\"min-h-28 relative\">\n                        {loading ? (\n                            <TableRow>\n                                <TableCell colSpan={4} className=\"text-center\">\n                                    Loading...\n                                </TableCell>\n                            </TableRow>\n                        ) : (\n                            <>\n                                {tugas.map((tugas, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell className=\"font-medium\">\n                                            {index + 1}\n                                        </TableCell>\n                                        <TableCell>\n                                            <p className=\"line-clamp-1\">\n                                                {tugas.nama_tugas}\n                                            </p>\n                                        </TableCell>\n                                        <TableCell>\n                                            <a\n                                                className=\"line-clamp-1 text-wrap\"\n                                                href={tugas.jawaban}\n                                                target=\"_blank\"\n                                            >\n                                                {tugas.jawaban}\n                                            </a>\n                                        </TableCell>\n                                        <TableCell>\n                                            {tugas.isReturn\n                                                ? \"Dikembalikan\"\n                                                : \"Diterima\"}\n                                        </TableCell>\n                                        <TableCell className=\"flex gap-1\">\n                                            <a\n                                                href={tugas.jawaban}\n                                                target=\"_blank\"\n                                            >\n                                                <Button size=\"sm\">\n                                                    Lihat Tugas\n                                                </Button>\n                                            </a>\n\n                                            <Dialog>\n                                                {tugas.isReturn ? null : (\n                                                    <DialogTrigger asChild>\n                                                        <Button\n                                                            className=\"gap-2\"\n                                                            variant=\"outline\"\n                                                            size=\"sm\"\n                                                            onClick={() =>\n                                                                setData(\n                                                                    \"id\",\n                                                                    tugas.id,\n                                                                )\n                                                            }\n                                                        >\n                                                            Kembalikan Tugas\n                                                        </Button>\n                                                    </DialogTrigger>\n                                                )}\n\n                                                <DialogContent className=\"sm:max-w-[425px]\">\n                                                    <DialogHeader>\n                                                        <DialogTitle>\n                                                            Kembalikan Tugas\n                                                        </DialogTitle>\n                                                        <DialogDescription>\n                                                            Kembalikan tugas\n                                                            yang sudah\n                                                            dikerjakan oleh\n                                                            mahasiswa ini agar\n                                                            diperbaiki\n                                                        </DialogDescription>\n                                                    </DialogHeader>\n\n                                                    <div className=\"grid gap-4 py-4\">\n                                                        <div className=\"flex flex-col\">\n                                                            <Label\n                                                                htmlFor=\"catatan\"\n                                                                className=\"text-left\"\n                                                            >\n                                                                Catatan\n                                                            </Label>\n\n                                                            <Textarea\n                                                                id=\"catatan\"\n                                                                onChange={(e) =>\n                                                                    setData(\n                                                                        \"catatan\",\n                                                                        e.target\n                                                                            .value,\n                                                                    )\n                                                                }\n                                                                placeholder=\"Berikan catatan pengembalian tugas\"\n                                                                className=\"mt-1\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <DialogFooter>\n                                                        <DialogClose asChild>\n                                                            <Button variant=\"outline\">\n                                                                Batalkan\n                                                            </Button>\n                                                        </DialogClose>\n\n                                                        <DialogClose asChild>\n                                                            <Button\n                                                                onClick={\n                                                                    handleKembalikanTugas\n                                                                }\n                                                            >\n                                                                Lanjutkan\n                                                            </Button>\n                                                        </DialogClose>\n                                                    </DialogFooter>\n                                                </DialogContent>\n                                            </Dialog>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </>\n                        )}\n                    </TableBody>\n                </Table>\n                <ScrollBar orientation=\"horizontal\" />\n            </ScrollArea>\n        </>\n    );\n};\n\nexport default DetailTugasUser;\n","import { PageProps } from \"vendor/laravel/breeze/stubs/inertia-react-ts/resources/js/types\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { usePage } from \"@inertiajs/react\";\n\nimport DashboardLayout from \"@/Layouts/DashboardLayout\";\n\nimport CoverMading from \"@/Components/dashboard/mading/CoverMading\";\nimport DetailTugasUser from \"@/Components/dashboard/mading/DetailTugasUser\";\nimport TugasKelompok from \"@/Components/dashboard/mading/TugasKelompok\";\nimport { MadingClient } from \"@/Components/tables/mading/client\";\nimport { Breadcrumbs } from \"@/Components/ui/breadcrumbs\";\nimport { Button } from \"@/Components/ui/button\";\nimport { Toaster } from \"@/Components/ui/toaster\";\nimport { useToast } from \"@/Components/ui/use-toast\";\n\nconst breadcrumbItems = [\n    { title: \"Dashboard\", link: \"/dashboard\" },\n    { title: \"Mading\", link: \"/dashboard/mading\" },\n    { title: \"Detail Tugas\", link: \"/dashboard/mading/user\" },\n];\n\ninterface flashresponse extends PageProps {\n    flash: {\n        response: {\n            status: number;\n            message: string;\n        };\n    };\n}\n\nexport default function Page({ auth, id }) {\n    const { toast } = useToast();\n    const { flash } = usePage<flashresponse>().props;\n\n    useEffect(() => {\n        if (flash.response) {\n            if (flash.response.status === 200) {\n                toast({\n                    title: \"Berhasil\",\n                    description: flash.response.message,\n                    variant: \"default\",\n                });\n            } else {\n                toast({\n                    title: \"Gagal\",\n                    description: flash.response.message,\n                    variant: \"destructive\",\n                });\n            }\n\n            window.location.reload();\n        }\n    }, [flash, toast]);\n\n    return (\n        <>\n            <DashboardLayout user={auth.user}>\n                <Breadcrumbs items={breadcrumbItems} />\n\n                <DetailTugasUser id={id} />\n            </DashboardLayout>\n\n            <Toaster />\n        </>\n    );\n}\n"],"names":["DetailTugasUser$1","id","loading","setLoading","useState","tugas","setTugas","nama","setNama","useEffect","async","response","fetch","route","method","headers","Accept","ok","Error","data","json","setData","put","useForm","catatan","_method","handleKembalikanTugas","jsxRuntimeExports","jsxs","Fragment","children","className","ScrollArea","Table","jsx","TableHeader","TableRow","TableHead","TableBody","TableCell","colSpan","map","index","nama_tugas","href","jawaban","target","isReturn","Button","size","Dialog","DialogTrigger","asChild","variant","onClick","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","htmlFor","Textarea","onChange","e","value","placeholder","DialogFooter","DialogClose","ScrollBar","orientation","breadcrumbItems","title","link","Page","auth","toast","useToast","flash","usePage","props","status","description","message","window","location","reload","DashboardLayout","user","Breadcrumbs","items","DetailTugasUser","Toaster"],"mappings":"8uBA8CA,MAsMAA,EAtMgD,EAAGC,SAC/C,MAAOC,EAASC,GAAcC,YAAkB,IACzCC,EAAOC,GAAYF,EAAAA,SAA0B,KAC7CG,EAAMC,GAAWJ,WAAiB,IAyBzCK,EAAAA,WAAU,KAvBWC,WACjBP,GAAW,GAEX,MAAMQ,QAAiBC,MAAMC,MAAM,4BAA6BZ,GAAK,CACjEa,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBC,OAAQ,sBAIZ,IAACL,EAASM,GACJ,MAAA,IAAIC,MAAM,wBAGdC,MAAAA,QAAaR,EAASS,OAEnBD,EAAAA,EAAKR,SAASQ,MACvBX,EAAQW,EAAKZ,MAEbJ,GAAW,EAAK,OAKjB,IAEH,MAAMgB,KAAEA,EAAAE,QAAMA,EAASC,IAAAA,GAAQC,EAAQ,CACnCtB,GAAI,EACJuB,QAAS,GACTC,QAAS,QAGPC,EAAwB,KACtBJ,EAAAT,MAAM,0BAAyB,EAGvC,OAEQc,EAAAC,KAAAC,WAAA,CAAAC,SAAA,GAACF,KAAA,KAAA,CAAGG,UAAU,oCAAoCD,SAAA,CAAA,gBAChCvB,OAGlBqB,KAACI,EAAW,CAAAD,UAAU,8DAClBD,SAAA,GAACF,KAAAK,EAAA,CAAMF,UAAU,kBACbD,SAAA,CAAAI,MAACC,EACG,CAAAL,SAAAF,EAAAA,KAACQ,EAAS,CAAAL,UAAU,8BAChBD,SAAA,CAACI,EAAAA,IAAAG,EAAA,CAAUN,UAAU,sBAAsBD,SAE3C,OACCI,EAAAA,IAAAG,EAAA,CAAUN,UAAU,uBAAuBD,SAE5C,eACCI,EAAAA,IAAAG,EAAA,CAAUN,UAAU,uBAAuBD,SAE5C,SACCI,EAAAA,IAAAG,EAAA,CAAUN,UAAU,aAAaD,SAElC,wBACCI,EAAAA,IAAAG,EAAA,CAAUN,UAAU,aAAaD,SAAI,gBAG9CI,IAACI,GAAUP,UAAU,oBAChBD,WACII,EAAAA,IAAAE,EAAA,CACGN,SAACH,EAAAO,IAAAK,EAAA,CAAUC,QAAS,EAAGT,UAAU,cAAcD,SAAA,iBAM9CH,EAAAO,IAAAL,EAAAA,SAAA,CAAAC,SAAAzB,EAAMoC,KAAI,CAACpC,EAAOqC,MACfd,KAACQ,EACG,CAAAN,SAAA,CAAAI,EAAAA,IAACK,EAAU,CAAAR,UAAU,cAChBD,SAAAY,EAAQ,MAEbR,IAACK,GACGT,WAACI,IAAA,IAAA,CAAEH,UAAU,eACRD,SAAAzB,EAAMsC,qBAGdJ,EACG,CAAAT,SAAAH,EAAAO,IAAC,IAAA,CACGH,UAAU,yBACVa,KAAMvC,EAAMwC,QACZC,OAAO,SAENhB,SAAAzB,EAAMwC,kBAGdN,EACI,CAAAT,SAAAzB,EAAM0C,SACD,eACA,eAEVnB,KAACW,EAAU,CAAAR,UAAU,aACjBD,SAAA,CAAAH,EAAAO,IAAC,IAAA,CACGU,KAAMvC,EAAMwC,QACZC,OAAO,SAEPhB,WAACI,IAAAc,EAAA,CAAOC,KAAK,KAAKnB,SAElB,yBAGHoB,EACI,CAAApB,SAAA,CAAAzB,EAAM0C,SAAW,KACbpB,EAAAO,IAAAiB,EAAA,CAAcC,SAAO,EAClBtB,SAAAH,EAAAO,IAACc,EAAA,CACGjB,UAAU,QACVsB,QAAQ,UACRJ,KAAK,KACLK,QAAS,IACLjC,EACI,KACAhB,EAAMJ,IAGjB6B,SAAA,yBAMTF,KAAC2B,EAAc,CAAAxB,UAAU,mBACrBD,SAAA,QAAC0B,EACG,CAAA1B,SAAA,GAAAI,IAACuB,GAAY3B,SAEb,uBACAI,IAACwB,GAAkB5B,SAMnB,uFAGH,MAAI,CAAAC,UAAU,kBACXD,SAACF,EAAAA,KAAA,MAAA,CAAIG,UAAU,gBACXD,SAAA,CAAAH,EAAAO,IAACyB,EAAA,CACGC,QAAQ,UACR7B,UAAU,YACbD,SAAA,YAIDH,EAAAO,IAAC2B,EAAA,CACG5D,GAAG,UACH6D,SAAWC,GACP1C,EACI,UACA0C,EAAEjB,OACGkB,OAGbC,YAAY,qCACZlC,UAAU,qBAIrBmC,EACG,CAAApC,SAAA,GAACI,IAAAiC,EAAA,CAAYf,SAAO,EAChBtB,SAAAI,EAAAA,IAACc,GAAOK,QAAQ,UAAUvB,0BAK9BI,IAACiC,EAAY,CAAAf,SAAO,EAChBtB,SAAAH,EAAAO,IAACc,EAAA,CACGM,QACI5B,EAEPI,SAAA,8BArGVY,cAmHnCR,IAACkC,EAAU,CAAAC,YAAY,oBAE/B,EC/NFC,EAAkB,CACpB,CAAEC,MAAO,YAAaC,KAAM,cAC5B,CAAED,MAAO,SAAUC,KAAM,qBACzB,CAAED,MAAO,eAAgBC,KAAM,2BAYnC,SAAwBC,GAAKC,KAAEA,EAAMzE,GAAAA,IAC3B,MAAA0E,MAAEA,GAAUC,KACZC,MAAEA,GAAUC,IAAyBC,MAsB3C,OApBAtE,EAAAA,WAAU,KACFoE,EAAMlE,WACwB,MAA1BkE,EAAMlE,SAASqE,OACTL,EAAA,CACFJ,MAAO,WACPU,YAAaJ,EAAMlE,SAASuE,QAC5B7B,QAAS,YAGPsB,EAAA,CACFJ,MAAO,QACPU,YAAaJ,EAAMlE,SAASuE,QAC5B7B,QAAS,gBAIjB8B,OAAOC,SAASC,SACpB,GACD,CAACR,EAAOF,IAIHhD,EAAAC,KAAAC,WAAA,CAAAC,SAAA,GAACF,KAAA0D,EAAA,CAAgBC,KAAMb,EAAKa,KACxBzD,SAAA,GAACI,IAAAsD,EAAA,CAAYC,MAAOnB,UAEnBoB,GAAgBzF,gBAGpB0F,EAAQ,MAGrB"}