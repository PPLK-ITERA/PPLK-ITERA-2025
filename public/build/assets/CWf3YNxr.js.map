{"version":3,"file":"CWf3YNxr.js","sources":["../../../node_modules/@radix-ui/number/dist/index.mjs","../../../node_modules/@radix-ui/react-scroll-area/dist/index.mjs","../../../resources/js/Components/ui/scroll-area.tsx"],"sourcesContent":["// packages/core/number/src/number.ts\nfunction clamp(value, [min, max]) {\n  return Math.min(max, Math.max(min, value));\n}\nexport {\n  clamp\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/scroll-area/src/ScrollArea.tsx\nimport * as React2 from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\n// packages/react/scroll-area/src/useStateMachine.ts\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// packages/react/scroll-area/src/ScrollArea.tsx\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar SCROLL_AREA_NAME = \"ScrollArea\";\nvar [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\nvar [ScrollAreaProvider, useScrollAreaContext] = createScrollAreaContext(SCROLL_AREA_NAME);\nvar ScrollArea = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = \"hover\",\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React2.useState(null);\n    const [viewport, setViewport] = React2.useState(null);\n    const [content, setContent] = React2.useState(null);\n    const [scrollbarX, setScrollbarX] = React2.useState(null);\n    const [scrollbarY, setScrollbarY] = React2.useState(null);\n    const [cornerWidth, setCornerWidth] = React2.useState(0);\n    const [cornerHeight, setCornerHeight] = React2.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React2.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React2.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n    return /* @__PURE__ */ jsx(\n      ScrollAreaProvider,\n      {\n        scope: __scopeScrollArea,\n        type,\n        dir: direction,\n        scrollHideDelay,\n        scrollArea,\n        viewport,\n        onViewportChange: setViewport,\n        content,\n        onContentChange: setContent,\n        scrollbarX,\n        onScrollbarXChange: setScrollbarX,\n        scrollbarXEnabled,\n        onScrollbarXEnabledChange: setScrollbarXEnabled,\n        scrollbarY,\n        onScrollbarYChange: setScrollbarY,\n        scrollbarYEnabled,\n        onScrollbarYEnabledChange: setScrollbarYEnabled,\n        onCornerWidthChange: setCornerWidth,\n        onCornerHeightChange: setCornerHeight,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            ...scrollAreaProps,\n            ref: composedRefs,\n            style: {\n              position: \"relative\",\n              // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n              [\"--radix-scroll-area-corner-width\"]: cornerWidth + \"px\",\n              [\"--radix-scroll-area-corner-height\"]: cornerHeight + \"px\",\n              ...props.style\n            }\n          }\n        )\n      }\n    );\n  }\n);\nScrollArea.displayName = SCROLL_AREA_NAME;\nvar VIEWPORT_NAME = \"ScrollAreaViewport\";\nvar ScrollAreaViewport = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, children, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-scroll-area-viewport\": \"\",\n          ...viewportProps,\n          ref: composedRefs,\n          style: {\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n            overflowY: context.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n            ...props.style\n          },\n          children: /* @__PURE__ */ jsx(\"div\", { ref: context.onContentChange, style: { minWidth: \"100%\", display: \"table\" }, children })\n        }\n      )\n    ] });\n  }\n);\nScrollAreaViewport.displayName = VIEWPORT_NAME;\nvar SCROLLBAR_NAME = \"ScrollAreaScrollbar\";\nvar ScrollAreaScrollbar = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === \"horizontal\";\n    React2.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n    return context.type === \"hover\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarHover, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"scroll\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarScroll, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"auto\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarAuto, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"always\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarVisible, { ...scrollbarProps, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\nvar ScrollAreaScrollbarHover = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React2.useState(false);\n  React2.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n      scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n        scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarAuto,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarScroll = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const debounceScrollEnd = useDebounceCallback(() => send(\"SCROLL_END\"), 100);\n  const [state, send] = useStateMachine(\"hidden\", {\n    hidden: {\n      SCROLL: \"scrolling\"\n    },\n    scrolling: {\n      SCROLL_END: \"idle\",\n      POINTER_ENTER: \"interacting\"\n    },\n    interacting: {\n      SCROLL: \"interacting\",\n      POINTER_LEAVE: \"idle\"\n    },\n    idle: {\n      HIDE: \"hidden\",\n      SCROLL: \"scrolling\",\n      POINTER_ENTER: \"interacting\"\n    }\n  });\n  React2.useEffect(() => {\n    if (state === \"idle\") {\n      const hideTimer = window.setTimeout(() => send(\"HIDE\"), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n  React2.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send(\"SCROLL\");\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || state !== \"hidden\", children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": state === \"hidden\" ? \"hidden\" : \"visible\",\n      ...scrollbarProps,\n      ref: forwardedRef,\n      onPointerEnter: composeEventHandlers(props.onPointerEnter, () => send(\"POINTER_ENTER\")),\n      onPointerLeave: composeEventHandlers(props.onPointerLeave, () => send(\"POINTER_LEAVE\"))\n    }\n  ) });\n});\nvar ScrollAreaScrollbarAuto = React2.forwardRef((props, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React2.useState(false);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarVisible = React2.forwardRef((props, forwardedRef) => {\n  const { orientation = \"vertical\", ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React2.useRef(null);\n  const pointerOffsetRef = React2.useRef(0);\n  const [sizes, setSizes] = React2.useState({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 }\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n  const commonProps = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => thumbRef.current = thumb,\n    onThumbPointerUp: () => pointerOffsetRef.current = 0,\n    onThumbPointerDown: (pointerPos) => pointerOffsetRef.current = pointerPos\n  };\n  function getScrollPosition(pointerPos, dir) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n  if (orientation === \"horizontal\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarX,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }\n      }\n    );\n  }\n  if (orientation === \"vertical\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarY,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }\n      }\n    );\n  }\n  return null;\n});\nvar ScrollAreaScrollbarX = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"horizontal\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        bottom: 0,\n        left: context.dir === \"rtl\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        right: context.dir === \"ltr\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        [\"--radix-scroll-area-thumb-width\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.x),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.x),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar ScrollAreaScrollbarY = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"vertical\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        top: 0,\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: \"var(--radix-scroll-area-corner-height)\",\n        [\"--radix-scroll-area-thumb-height\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.y),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.y),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar [ScrollbarProvider, useScrollbarContext] = createScrollAreaContext(SCROLLBAR_NAME);\nvar ScrollAreaScrollbarImpl = React2.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React2.useState(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React2.useRef(null);\n  const prevWebkitUserSelectRef = React2.useRef(\"\");\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n  function handleDragScroll(event) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n  React2.useEffect(() => {\n    const handleWheel = (event) => {\n      const element = event.target;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener(\"wheel\", handleWheel, { passive: false });\n    return () => document.removeEventListener(\"wheel\", handleWheel, { passive: false });\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  React2.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(\n    ScrollbarProvider,\n    {\n      scope: __scopeScrollArea,\n      scrollbar,\n      hasThumb,\n      onThumbChange: useCallbackRef(onThumbChange),\n      onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n      onThumbPositionChange: handleThumbPositionChange,\n      onThumbPointerDown: useCallbackRef(onThumbPointerDown),\n      children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          ...scrollbarProps,\n          ref: composeRefs,\n          style: { position: \"absolute\", ...scrollbarProps.style },\n          onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {\n            const mainPointer = 0;\n            if (event.button === mainPointer) {\n              const element = event.target;\n              element.setPointerCapture(event.pointerId);\n              rectRef.current = scrollbar.getBoundingClientRect();\n              prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n              document.body.style.webkitUserSelect = \"none\";\n              if (context.viewport) context.viewport.style.scrollBehavior = \"auto\";\n              handleDragScroll(event);\n            }\n          }),\n          onPointerMove: composeEventHandlers(props.onPointerMove, handleDragScroll),\n          onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {\n            const element = event.target;\n            if (element.hasPointerCapture(event.pointerId)) {\n              element.releasePointerCapture(event.pointerId);\n            }\n            document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n            if (context.viewport) context.viewport.style.scrollBehavior = \"\";\n            rectRef.current = null;\n          })\n        }\n      )\n    }\n  );\n});\nvar THUMB_NAME = \"ScrollAreaThumb\";\nvar ScrollAreaThumb = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || scrollbarContext.hasThumb, children: /* @__PURE__ */ jsx(ScrollAreaThumbImpl, { ref: forwardedRef, ...thumbProps }) });\n  }\n);\nvar ScrollAreaThumbImpl = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(\n      forwardedRef,\n      (node) => scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React2.useRef();\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = void 0;\n      }\n    }, 100);\n    React2.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener(\"scroll\", handleScroll);\n        return () => viewport.removeEventListener(\"scroll\", handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n        ...thumbProps,\n        ref: composedRef,\n        style: {\n          width: \"var(--radix-scroll-area-thumb-width)\",\n          height: \"var(--radix-scroll-area-thumb-height)\",\n          ...style\n        },\n        onPointerDownCapture: composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        }),\n        onPointerUp: composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n      }\n    );\n  }\n);\nScrollAreaThumb.displayName = THUMB_NAME;\nvar CORNER_NAME = \"ScrollAreaCorner\";\nvar ScrollAreaCorner = React2.forwardRef(\n  (props, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== \"scroll\" && hasBothScrollbarsVisible;\n    return hasCorner ? /* @__PURE__ */ jsx(ScrollAreaCornerImpl, { ...props, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaCorner.displayName = CORNER_NAME;\nvar ScrollAreaCornerImpl = React2.forwardRef((props, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React2.useState(0);\n  const [height, setHeight] = React2.useState(0);\n  const hasSize = Boolean(width && height);\n  useResizeObserver(context.scrollbarX, () => {\n    const height2 = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height2);\n    setHeight(height2);\n  });\n  useResizeObserver(context.scrollbarY, () => {\n    const width2 = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width2);\n    setWidth(width2);\n  });\n  return hasSize ? /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      ...cornerProps,\n      ref: forwardedRef,\n      style: {\n        width,\n        height,\n        position: \"absolute\",\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: 0,\n        ...props.style\n      }\n    }\n  ) : null;\n});\nfunction toInt(value) {\n  return value ? parseInt(value, 10) : 0;\n}\nfunction getThumbRatio(viewportSize, contentSize) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\nfunction getThumbSize(sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  return Math.max(thumbSize, 18);\n}\nfunction getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange);\n  return interpolate(pointerPos);\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\nfunction linearScale(input, output) {\n  return (value) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\nvar addUnlinkedScrollListener = (node, handler = () => {\n}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\nfunction useDebounceCallback(callback, delay) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React2.useRef(0);\n  React2.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React2.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\nfunction useResizeObserver(element, onResize) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\nvar Root = ScrollArea;\nvar Viewport = ScrollAreaViewport;\nvar Scrollbar = ScrollAreaScrollbar;\nvar Thumb = ScrollAreaThumb;\nvar Corner = ScrollAreaCorner;\nexport {\n  Corner,\n  Root,\n  ScrollArea,\n  ScrollAreaCorner,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaViewport,\n  Scrollbar,\n  Thumb,\n  Viewport,\n  createScrollAreaScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":["clamp","value","min","max","Math","SCROLL_AREA_NAME","createScrollAreaContext","createScrollAreaScope","createContextScope","ScrollAreaProvider","useScrollAreaContext","ScrollArea","React2.forwardRef","forwardRef","props","forwardedRef","__scopeScrollArea","type","dir","scrollHideDelay","scrollAreaProps","scrollArea","setScrollArea","React2.useState","useState","viewport","setViewport","content","setContent","scrollbarX","setScrollbarX","scrollbarY","setScrollbarY","cornerWidth","setCornerWidth","cornerHeight","setCornerHeight","scrollbarXEnabled","setScrollbarXEnabled","scrollbarYEnabled","setScrollbarYEnabled","composedRefs","useComposedRefs","node","direction","useDirection","jsxRuntimeExports","jsx","scope","onViewportChange","onContentChange","onScrollbarXChange","onScrollbarXEnabledChange","onScrollbarYChange","onScrollbarYEnabledChange","onCornerWidthChange","onCornerHeightChange","children","Primitive","div","ref","style","position","displayName","VIEWPORT_NAME","ScrollAreaViewport","nonce","viewportProps","context","React2.useRef","jsxs","Fragment","dangerouslySetInnerHTML","__html","overflowX","overflowY","minWidth","display","SCROLLBAR_NAME","ScrollAreaScrollbar","forceMount","scrollbarProps","isHorizontal","orientation","React2.useEffect","ScrollAreaScrollbarHover","ScrollAreaScrollbarScroll","ScrollAreaScrollbarAuto","ScrollAreaScrollbarVisible","visible","setVisible","hideTimer","handlePointerEnter","window","clearTimeout","handlePointerLeave","setTimeout","addEventListener","removeEventListener","Presence","present","debounceScrollEnd","useDebounceCallback","send","state","initialState","machine","hidden","SCROLL","scrolling","SCROLL_END","POINTER_ENTER","interacting","POINTER_LEAVE","idle","HIDE","React.useReducer","useReducer","event","scrollDirection","prevScrollPos","handleScroll","scrollPos","onPointerEnter","composeEventHandlers","onPointerLeave","handleResize","isOverflowX","offsetWidth","scrollWidth","isOverflowY","offsetHeight","scrollHeight","useResizeObserver","thumbRef","pointerOffsetRef","sizes","setSizes","scrollbar","size","paddingStart","paddingEnd","thumbRatio","getThumbRatio","commonProps","onSizesChange","hasThumb","Boolean","onThumbChange","thumb","current","onThumbPointerUp","onThumbPointerDown","pointerPos","getScrollPosition","pointerOffset","thumbSizePx","getThumbSize","thumbCenter","offset","thumbOffsetFromEnd","minPointerPos","maxPointerPos","maxScrollPos","scrollRange","linearScale","interpolate","getScrollPositionFromPointer","ScrollAreaScrollbarX","onThumbPositionChange","getThumbOffsetFromScroll","scrollLeft","transform","onWheelScroll","onDragScroll","ScrollAreaScrollbarY","scrollTop","computedStyle","setComputedStyle","composeRefs","getComputedStyle","ScrollAreaScrollbarImpl","bottom","left","right","x","deltaX","isScrollingWithinScrollbarBounds","preventDefault","onResize","clientWidth","toInt","paddingLeft","paddingRight","top","y","deltaY","clientHeight","paddingTop","paddingBottom","ScrollbarProvider","useScrollbarContext","setScrollbar","rectRef","prevWebkitUserSelectRef","handleWheelScroll","useCallbackRef","handleThumbPositionChange","handleDragScroll","clientX","clientY","handleWheel","element","target","contains","document","passive","onPointerDown","button","setPointerCapture","pointerId","getBoundingClientRect","body","webkitUserSelect","scrollBehavior","onPointerMove","onPointerUp","hasPointerCapture","releasePointerCapture","THUMB_NAME","ScrollAreaThumb","thumbProps","scrollbarContext","ScrollAreaThumbImpl","scrollAreaContext","composedRef","removeUnlinkedScrollListenerRef","listener","addUnlinkedScrollListener","width","height","onPointerDownCapture","thumbRect","CORNER_NAME","ScrollAreaCorner","hasBothScrollbarsVisible","ScrollAreaCornerImpl","cornerProps","setWidth","setHeight","hasSize","height2","_a","width2","parseInt","viewportSize","contentSize","ratio","isNaN","scrollbarPadding","thumbSize","maxThumbPos","scrollWithoutMomentum","input","output","handler","prevPosition","rAF","loop","isHorizontalScroll","isVerticalScroll","requestAnimationFrame","cancelAnimationFrame","callback","delay","handleCallback","debounceTimerRef","React2.useCallback","reactExports","useEffect","useCallback","useLayoutEffect","resizeObserver","ResizeObserver","observe","unobserve","Root","Viewport","Corner","React.forwardRef","className","ScrollAreaPrimitive.Root","cn","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb"],"mappings":"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","x_google_ignoreList":[0,1]}