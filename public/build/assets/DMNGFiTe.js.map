{"version":3,"file":"DMNGFiTe.js","sources":["../../../resources/js/Components/dashboard/create-user/CreateUser.tsx","../../../resources/js/Pages/Dashboard/create-user/Page.tsx"],"sourcesContent":["import { DetailUser } from \"@/Pages/Dashboard/detail-user/Page\";\nimport { CaretSortIcon, CheckIcon } from \"@radix-ui/react-icons\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useForm } from \"@inertiajs/react\";\n\nimport { Button } from \"@/Components/ui/button\";\nimport {\n    Command,\n    CommandEmpty,\n    CommandGroup,\n    CommandInput,\n    CommandItem,\n} from \"@/Components/ui/command\";\nimport { Input } from \"@/Components/ui/input\";\nimport { Label } from \"@/Components/ui/label\";\nimport {\n    Popover,\n    PopoverContent,\n    PopoverTrigger,\n} from \"@/Components/ui/popover\";\nimport { ScrollArea, ScrollBar } from \"@/Components/ui/scroll-area\";\nimport {\n    Select,\n    SelectContent,\n    SelectGroup,\n    SelectItem,\n    SelectLabel,\n    SelectTrigger,\n    SelectValue,\n} from \"@/Components/ui/select\";\n\nimport { PRODI_DATA } from \"@/lib/data/programStudi\";\nimport { cn } from \"@/lib/utils\";\n\ninterface kelompokData {\n    id: number;\n    nama_kelompok: string;\n    no_kelompok: number;\n}\n\nexport default function CreateUser() {\n    const { data, setData, post } = useForm({\n        name: \"\",\n        kelompok_id: 0,\n        prodi_id: 0,\n        role_id: 0,\n    });\n\n    const [openProdi, setOpenProdi] = useState(false);\n    const [openKelompok, setOpenKelompok] = useState(false);\n    const [prodiValue, setProdiValue] = useState(\"\");\n    const [kelompokValue, setKelompokValue] = useState(\"\");\n    const [kelompokData, setKelompokData] = useState<kelompokData[]>([]);\n\n    const [selectedRole, setSelectedRole] = useState(\"\"); // State untuk menyimpan hari yang dipilih\n\n    const handleChangeRole = (value: string) => {\n        setSelectedRole(value); // Update state ketika pengguna memilih hari\n\n        setData(\"role_id\", parseInt(value));\n    };\n\n    const handleCreateUser = () => {\n        post(route(\"dashboard.user.store\"));\n    };\n\n    const getProdiData = async () => {\n        const response = await fetch(route(\"dashboard.user.data.kelompok\"), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n        const data = await response.json();\n        setKelompokData(data);\n        console.log(data);\n    };\n\n    useEffect(() => {\n        getProdiData();\n    }, []);\n\n    return (\n        <div className=\"h-fit flex-1 w-full p-4 space-y-5 border rounded-md shadow-md\">\n            <h2 className=\"text-xl font-bold tracking-tight\">Form Data User</h2>\n\n            <div className=\"flex flex-col\">\n                <Label htmlFor=\"nama-maba\" className=\"text-left\">\n                    Nama\n                </Label>\n\n                <Input\n                    type=\"text\"\n                    id=\"nama-maba\"\n                    value={data.name}\n                    onChange={(e) => setData(\"name\", e.target.value)}\n                    placeholder=\"Chandra Budi Wijaya\"\n                    className=\"mt-1\"\n                />\n            </div>\n\n            <div className=\"flex flex-col\">\n                <Label htmlFor=\"kelompok\" className=\"text-left\">\n                    Kelompok\n                </Label>\n\n                <Popover open={openKelompok} onOpenChange={setOpenKelompok}>\n                    <PopoverTrigger asChild>\n                        <Button\n                            variant=\"outline\"\n                            role=\"combobox\"\n                            aria-expanded={openKelompok}\n                            className=\"justify-between w-full mt-1 font-normal\"\n                        >\n                            {kelompokValue\n                                ? kelompokData.find(\n                                      (kelompok) =>\n                                          JSON.stringify(kelompok.id) ===\n                                          kelompokValue,\n                                  )?.id\n                                : `Pilih Kelompok`}\n                            <CaretSortIcon className=\"shrink-0 w-4 h-4 ml-2 opacity-50\" />\n                        </Button>\n                    </PopoverTrigger>\n\n                    <PopoverContent>\n                        <Command>\n                            <CommandInput\n                                placeholder=\"Cari Kelompok...\"\n                                className=\"h-9\"\n                            />\n                            <CommandEmpty>\n                                Data kelompok tidak ada.\n                            </CommandEmpty>\n                            <CommandGroup>\n                                <ScrollArea className=\"h-[calc(50vh-64px)]\">\n                                    {kelompokData.length > 0\n                                        ? kelompokData.map(\n                                              (kelompok, index) => (\n                                                  <CommandItem\n                                                      key={index}\n                                                      value={JSON.stringify(\n                                                          kelompok.id,\n                                                      )}\n                                                      onSelect={(\n                                                          currentValue,\n                                                      ) => {\n                                                          setKelompokValue(\n                                                              currentValue ===\n                                                                  kelompokValue\n                                                                  ? \"\"\n                                                                  : currentValue,\n                                                          );\n                                                          setData(\n                                                              \"kelompok_id\",\n                                                              kelompok.id,\n                                                          );\n                                                          setOpenKelompok(\n                                                              false,\n                                                          );\n                                                      }}\n                                                  >\n                                                      {kelompok.nama_kelompok}\n                                                      <CheckIcon\n                                                          className={cn(\n                                                              \"ml-auto h-4 w-4\",\n                                                              kelompokValue ===\n                                                                  JSON.stringify(\n                                                                      kelompok.id,\n                                                                  )\n                                                                  ? \"opacity-100\"\n                                                                  : \"opacity-0\",\n                                                          )}\n                                                      />\n                                                  </CommandItem>\n                                              ),\n                                          )\n                                        : null}\n                                    <ScrollBar orientation=\"vertical\" />\n                                </ScrollArea>\n                            </CommandGroup>\n                        </Command>\n                    </PopoverContent>\n                </Popover>\n            </div>\n\n            <div className=\"flex flex-col\">\n                <Label htmlFor=\"prodi-maba\" className=\"text-left\">\n                    Prodi\n                </Label>\n\n                <Popover open={openProdi} onOpenChange={setOpenProdi}>\n                    <PopoverTrigger asChild>\n                        <Button\n                            variant=\"outline\"\n                            role=\"combobox\"\n                            aria-expanded={openProdi}\n                            className=\"justify-between w-full mt-1 font-normal\"\n                        >\n                            {prodiValue\n                                ? PRODI_DATA.find(\n                                      (prodi) => prodi.value === prodiValue,\n                                  )?.label\n                                : `Pilih Prodi`}\n                            <CaretSortIcon className=\"shrink-0 w-4 h-4 ml-2 opacity-50\" />\n                        </Button>\n                    </PopoverTrigger>\n\n                    <PopoverContent>\n                        <Command>\n                            <CommandInput\n                                placeholder=\"Cari Prodi...\"\n                                className=\"h-9\"\n                            />\n                            <CommandEmpty>Data prodi tidak ada.</CommandEmpty>\n                            <CommandGroup>\n                                <ScrollArea className=\"h-[calc(50vh-64px)]\">\n                                    {PRODI_DATA.map((prodi) => (\n                                        <CommandItem\n                                            key={prodi.value}\n                                            value={prodi.value}\n                                            onSelect={(currentValue) => {\n                                                setProdiValue(\n                                                    currentValue === prodiValue\n                                                        ? \"\"\n                                                        : currentValue,\n                                                );\n                                                setData(\"prodi_id\", prodi.id);\n                                                setOpenProdi(false);\n                                            }}\n                                        >\n                                            {prodi.label}\n                                            <CheckIcon\n                                                className={cn(\n                                                    \"ml-auto h-4 w-4\",\n                                                    prodiValue === prodi.value\n                                                        ? \"opacity-100\"\n                                                        : \"opacity-0\",\n                                                )}\n                                            />\n                                        </CommandItem>\n                                    ))}\n                                    <ScrollBar orientation=\"vertical\" />\n                                </ScrollArea>\n                            </CommandGroup>\n                        </Command>\n                    </PopoverContent>\n                </Popover>\n            </div>\n\n            <div className=\"flex flex-col\">\n                <Label htmlFor=\"role\" className=\"text-left\">\n                    Role\n                </Label>\n\n                <Select\n                    onValueChange={handleChangeRole}\n                    defaultValue={selectedRole}\n                >\n                    <SelectTrigger className=\"w-full\">\n                        <SelectValue placeholder=\"Pilih Role\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                        <SelectGroup>\n                            <SelectLabel>Opsi Role</SelectLabel>\n\n                            <SelectItem value=\"1\">Maba</SelectItem>\n                            <SelectItem value=\"2\">Daplok</SelectItem>\n                            <SelectItem value=\"4\">Mentor</SelectItem>\n                            <SelectItem value=\"5\">Pjprodi</SelectItem>\n                            <SelectItem value=\"6\">Korlap</SelectItem>\n                            <SelectItem value=\"7\">Mamet</SelectItem>\n                            <SelectItem value=\"8\">CustomerService</SelectItem>\n                        </SelectGroup>\n                    </SelectContent>\n                </Select>\n            </div>\n\n            <div className=\"flex justify-end\">\n                <Button onClick={handleCreateUser}>Tambah Data</Button>\n            </div>\n        </div>\n    );\n}\n","import { PageProps } from \"vendor/laravel/breeze/stubs/inertia-react-ts/resources/js/types\";\n\nimport { useEffect } from \"react\";\n\nimport { usePage } from \"@inertiajs/react\";\n\nimport DashboardLayout from \"@/Layouts/DashboardLayout\";\n\nimport CreateUser from \"@/Components/dashboard/create-user/CreateUser\";\nimport { Breadcrumbs } from \"@/Components/ui/breadcrumbs\";\nimport { Toaster } from \"@/Components/ui/toaster\";\nimport { useToast } from \"@/Components/ui/use-toast\";\n\nconst breadcrumbItems = [\n    { title: \"Dashboard\", link: \"/dashboard\" },\n    { title: \"Create User\", link: \"/dashboard/create-user\" },\n];\n\ninterface flashresponse extends PageProps {\n    flash: {\n        response: {\n            status: number;\n            message: string;\n        };\n    };\n}\n\nexport default function Page({ auth }) {\n    const { toast } = useToast();\n    const { flash } = usePage<flashresponse>().props;\n\n    useEffect(() => {\n        if (flash.response) {\n            if (flash.response.status === 200) {\n                toast({\n                    title: \"Berhasil\",\n                    description: flash.response.message,\n                    variant: \"default\",\n                });\n            } else {\n                toast({\n                    title: \"Gagal\",\n                    description: flash.response.message,\n                    variant: \"destructive\",\n                });\n            }\n        }\n    }, [flash, toast]);\n\n    return (\n        <>\n            <DashboardLayout user={auth.user}>\n                <Breadcrumbs items={breadcrumbItems} />\n\n                <h2 className=\"text-3xl font-bold tracking-tight\">\n                    Create User\n                </h2>\n\n                <div className=\"md:pb-20 max-w-sm pb-64\">\n                    <CreateUser />\n                </div>\n            </DashboardLayout>\n\n            <Toaster />\n        </>\n    );\n}\n"],"names":["CreateUser","data","setData","post","useForm","name","kelompok_id","prodi_id","role_id","openProdi","setOpenProdi","useState","openKelompok","setOpenKelompok","prodiValue","setProdiValue","kelompokValue","setKelompokValue","kelompokData","setKelompokData","selectedRole","setSelectedRole","useEffect","async","response","fetch","route","method","headers","Accept","json","console","log","jsxs","className","children","jsx","Label","htmlFor","jsxRuntimeExports","Input","type","id","value","onChange","e","target","placeholder","Popover","open","onOpenChange","PopoverTrigger","asChild","Button","variant","role","_a","find","kelompok","JSON","stringify","CaretSortIcon","PopoverContent","Command","CommandInput","CommandEmpty","CommandGroup","ScrollArea","length","map","index","CommandItem","onSelect","currentValue","nama_kelompok","CheckIcon","cn","ScrollBar","orientation","_b","PRODI_DATA","prodi","label","Select","onValueChange","parseInt","defaultValue","SelectTrigger","SelectValue","SelectContent","SelectGroup","SelectLabel","SelectItem","onClick","breadcrumbItems","title","link","Page","auth","toast","useToast","flash","usePage","props","status","description","message","Fragment","DashboardLayout","user","Breadcrumbs","items","Toaster"],"mappings":"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"}