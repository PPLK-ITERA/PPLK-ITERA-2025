{"version":3,"file":"BgbaDr8P.js","sources":["../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.17\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.17\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.17 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","noop","any","invariant","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","reactExports","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","context2","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217]}