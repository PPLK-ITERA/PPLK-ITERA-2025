{"version":3,"file":"BiTYtoFI.js","sources":["../../../resources/js/Components/ui/button.tsx"],"sourcesContent":["import { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\n\nimport React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"shadow-md inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-primary text-primary-foreground hover:bg-primary/90\",\n                destructive:\n                    \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n                outline:\n                    \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n                secondary:\n                    \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n                ghost: \"hover:bg-accent hover:text-accent-foreground\",\n                link: \"text-primary underline-offset-4 hover:underline\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    },\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":["buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","forwardRef","className","asChild","props","ref","Comp","Slot","jsxRuntimeExports","jsx","cn","displayName"],"mappings":"oHAOA,MAAMA,EAAiBC,EACnB,mSACA,CACIC,SAAU,CACNC,QAAS,CACLC,QACI,yDACJC,YACI,qEACJC,QACI,iFACJC,UACI,+DACJC,MAAO,+CACPC,KAAM,mDAEVC,KAAM,CACFN,QAAS,iBACTO,GAAI,sBACJC,GAAI,uBACJC,KAAM,cAGdC,gBAAiB,CACbX,QAAS,UACTO,KAAM,aAWZK,EAASC,EAAMC,YACjB,EAAGC,YAAWf,UAASO,OAAMS,WAAU,KAAUC,GAASC,KAChD,MAAAC,EAAOH,EAAUI,EAAO,SAE1B,OAAAC,EAAAC,IAACH,EAAA,CACGJ,UAAWQ,EAAG1B,EAAe,CAAEG,UAASO,OAAMQ,eAC9CG,SACID,GAAA,IAKpBL,EAAOY,YAAc"}